{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "zGhN9mm8IVNf"
   },
   "source": [
    "# SPRINT **2**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "id": "-owF05BgAat-"
   },
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'google.colab'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[1;32mIn [3], line 11\u001b[0m\n\u001b[0;32m      9\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mpydrive\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mauth\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m GoogleAuth\n\u001b[0;32m     10\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mpydrive\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mdrive\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m GoogleDrive\n\u001b[1;32m---> 11\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mgoogle\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mcolab\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m auth\n\u001b[0;32m     12\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01moauth2client\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mclient\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m GoogleCredentials\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'google.colab'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import plotly.express as px\n",
    "from datetime import datetime\n",
    "from pprint import pprint\n",
    " \n",
    "from pydrive.auth import GoogleAuth\n",
    "from pydrive.drive import GoogleDrive\n",
    "from google.colab import auth\n",
    "from oauth2client.client import GoogleCredentials\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "uGt45S6GC4Qo",
    "outputId": "33a1074e-99da-4983-8ded-3d1ee49cf218"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       tripduration            starttime             stoptime  \\\n",
      "\n",
      "0               695  2013-06-01 00:00:01  2013-06-01 00:11:36   \n",
      "\n",
      "1               693  2013-06-01 00:00:08  2013-06-01 00:11:41   \n",
      "\n",
      "2              2059  2013-06-01 00:00:44  2013-06-01 00:35:03   \n",
      "\n",
      "3               123  2013-06-01 00:01:04  2013-06-01 00:03:07   \n",
      "\n",
      "4              1521  2013-06-01 00:01:22  2013-06-01 00:26:43   \n",
      "\n",
      "...             ...                  ...                  ...   \n",
      "\n",
      "84087          1478  2013-06-08 14:35:22  2013-06-08 15:00:00   \n",
      "\n",
      "84088           873  2013-06-08 14:35:31  2013-06-08 14:50:04   \n",
      "\n",
      "84089          2054  2013-06-08 14:34:51  2013-06-08 15:09:05   \n",
      "\n",
      "84090          1179  2013-06-08 14:35:28  2013-06-08 14:55:07   \n",
      "\n",
      "84091           804  2013-06-08 14:35:33                  NaN   \n",
      "\n",
      "\n",
      "\n",
      "       start station id       start station name  start station latitude  \\\n",
      "\n",
      "0                 444.0       Broadway & W 24 St               40.742354   \n",
      "\n",
      "1                 444.0       Broadway & W 24 St               40.742354   \n",
      "\n",
      "2                 406.0   Hicks St & Montague St               40.695128   \n",
      "\n",
      "3                 475.0      E 15 St & Irving Pl               40.735243   \n",
      "\n",
      "4                2008.0    Little West St & 1 Pl               40.705693   \n",
      "\n",
      "...                 ...                      ...                     ...   \n",
      "\n",
      "84087             337.0      Old Slip & Front St               40.703799   \n",
      "\n",
      "84088             447.0          8 Ave & W 52 St               40.763707   \n",
      "\n",
      "84089             229.0           Great Jones St               40.727434   \n",
      "\n",
      "84090             259.0  South St & Whitehall St               40.701221   \n",
      "\n",
      "84091               NaN                      NaN                     NaN   \n",
      "\n",
      "\n",
      "\n",
      "       start station longitude  end station id            end station name  \\\n",
      "\n",
      "0                   -73.989151           434.0             9 Ave & W 18 St   \n",
      "\n",
      "1                   -73.989151           434.0             9 Ave & W 18 St   \n",
      "\n",
      "2                   -73.995951           406.0      Hicks St & Montague St   \n",
      "\n",
      "3                   -73.987586           262.0             Washington Park   \n",
      "\n",
      "4                   -74.016777           310.0         State St & Smith St   \n",
      "\n",
      "...                        ...             ...                         ...   \n",
      "\n",
      "84087               -74.008387           342.0  Columbia St & Rivington St   \n",
      "\n",
      "84088               -73.985162           404.0             9 Ave & W 14 St   \n",
      "\n",
      "84089               -73.993790          2012.0             E 27 St & 1 Ave   \n",
      "\n",
      "84090               -74.012342           383.0  Greenwich Ave & Charles St   \n",
      "\n",
      "84091                      NaN             NaN                         NaN   \n",
      "\n",
      "\n",
      "\n",
      "       end station latitude  end station longitude   bikeid    usertype  \\\n",
      "\n",
      "0                 40.743174             -74.003664  19678.0  Subscriber   \n",
      "\n",
      "1                 40.743174             -74.003664  16649.0  Subscriber   \n",
      "\n",
      "2                 40.695128             -73.995951  19599.0    Customer   \n",
      "\n",
      "3                 40.691782             -73.973730  16352.0  Subscriber   \n",
      "\n",
      "4                 40.689269             -73.989129  15567.0  Subscriber   \n",
      "\n",
      "...                     ...                    ...      ...         ...   \n",
      "\n",
      "84087             40.717400             -73.980166  19730.0    Customer   \n",
      "\n",
      "84088             40.740583             -74.005509  15606.0    Customer   \n",
      "\n",
      "84089             40.739445             -73.976806  18597.0  Subscriber   \n",
      "\n",
      "84090             40.735238             -74.000271  14665.0  Subscriber   \n",
      "\n",
      "84091                   NaN                    NaN      NaN         NaN   \n",
      "\n",
      "\n",
      "\n",
      "       birth year  gender  \n",
      "\n",
      "0          1983.0     1.0  \n",
      "\n",
      "1          1984.0     1.0  \n",
      "\n",
      "2             NaN     0.0  \n",
      "\n",
      "3          1960.0     1.0  \n",
      "\n",
      "4          1983.0     1.0  \n",
      "\n",
      "...           ...     ...  \n",
      "\n",
      "84087         NaN     0.0  \n",
      "\n",
      "84088         NaN     0.0  \n",
      "\n",
      "84089      1977.0     1.0  \n",
      "\n",
      "84090      1968.0     2.0  \n",
      "\n",
      "84091         NaN     NaN  \n",
      "\n",
      "\n",
      "\n",
      "[84092 rows x 15 columns]\n"
     ]
    }
   ],
   "source": [
    "path = \"/content/dataset.csv\"\n",
    "df = pd.read_csv(path)\n",
    "print(df)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 458
    },
    "id": "gWr7XwXfJVBE",
    "outputId": "d3db45b4-14f5-4c25-808a-4d626b751ab2"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-8f8e751d-7df1-44f5-8fd3-077bad20bcbc\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tripduration</th>\n",
       "      <th>starttime</th>\n",
       "      <th>stoptime</th>\n",
       "      <th>start station id</th>\n",
       "      <th>start station name</th>\n",
       "      <th>start station latitude</th>\n",
       "      <th>start station longitude</th>\n",
       "      <th>end station id</th>\n",
       "      <th>end station name</th>\n",
       "      <th>end station latitude</th>\n",
       "      <th>end station longitude</th>\n",
       "      <th>bikeid</th>\n",
       "      <th>usertype</th>\n",
       "      <th>birth year</th>\n",
       "      <th>gender</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>695</td>\n",
       "      <td>2013-06-01 00:00:01</td>\n",
       "      <td>2013-06-01 00:11:36</td>\n",
       "      <td>444.0</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>40.742354</td>\n",
       "      <td>-73.989151</td>\n",
       "      <td>434.0</td>\n",
       "      <td>9 Ave &amp; W 18 St</td>\n",
       "      <td>40.743174</td>\n",
       "      <td>-74.003664</td>\n",
       "      <td>19678.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1983.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>693</td>\n",
       "      <td>2013-06-01 00:00:08</td>\n",
       "      <td>2013-06-01 00:11:41</td>\n",
       "      <td>444.0</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>40.742354</td>\n",
       "      <td>-73.989151</td>\n",
       "      <td>434.0</td>\n",
       "      <td>9 Ave &amp; W 18 St</td>\n",
       "      <td>40.743174</td>\n",
       "      <td>-74.003664</td>\n",
       "      <td>16649.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1984.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2059</td>\n",
       "      <td>2013-06-01 00:00:44</td>\n",
       "      <td>2013-06-01 00:35:03</td>\n",
       "      <td>406.0</td>\n",
       "      <td>Hicks St &amp; Montague St</td>\n",
       "      <td>40.695128</td>\n",
       "      <td>-73.995951</td>\n",
       "      <td>406.0</td>\n",
       "      <td>Hicks St &amp; Montague St</td>\n",
       "      <td>40.695128</td>\n",
       "      <td>-73.995951</td>\n",
       "      <td>19599.0</td>\n",
       "      <td>Customer</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>123</td>\n",
       "      <td>2013-06-01 00:01:04</td>\n",
       "      <td>2013-06-01 00:03:07</td>\n",
       "      <td>475.0</td>\n",
       "      <td>E 15 St &amp; Irving Pl</td>\n",
       "      <td>40.735243</td>\n",
       "      <td>-73.987586</td>\n",
       "      <td>262.0</td>\n",
       "      <td>Washington Park</td>\n",
       "      <td>40.691782</td>\n",
       "      <td>-73.973730</td>\n",
       "      <td>16352.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1960.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1521</td>\n",
       "      <td>2013-06-01 00:01:22</td>\n",
       "      <td>2013-06-01 00:26:43</td>\n",
       "      <td>2008.0</td>\n",
       "      <td>Little West St &amp; 1 Pl</td>\n",
       "      <td>40.705693</td>\n",
       "      <td>-74.016777</td>\n",
       "      <td>310.0</td>\n",
       "      <td>State St &amp; Smith St</td>\n",
       "      <td>40.689269</td>\n",
       "      <td>-73.989129</td>\n",
       "      <td>15567.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1983.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f8e751d-7df1-44f5-8fd3-077bad20bcbc')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-8f8e751d-7df1-44f5-8fd3-077bad20bcbc button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-8f8e751d-7df1-44f5-8fd3-077bad20bcbc');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "   tripduration            starttime             stoptime  start station id  \\\n",
       "0           695  2013-06-01 00:00:01  2013-06-01 00:11:36             444.0   \n",
       "1           693  2013-06-01 00:00:08  2013-06-01 00:11:41             444.0   \n",
       "2          2059  2013-06-01 00:00:44  2013-06-01 00:35:03             406.0   \n",
       "3           123  2013-06-01 00:01:04  2013-06-01 00:03:07             475.0   \n",
       "4          1521  2013-06-01 00:01:22  2013-06-01 00:26:43            2008.0   \n",
       "\n",
       "       start station name  start station latitude  start station longitude  \\\n",
       "0      Broadway & W 24 St               40.742354               -73.989151   \n",
       "1      Broadway & W 24 St               40.742354               -73.989151   \n",
       "2  Hicks St & Montague St               40.695128               -73.995951   \n",
       "3     E 15 St & Irving Pl               40.735243               -73.987586   \n",
       "4   Little West St & 1 Pl               40.705693               -74.016777   \n",
       "\n",
       "   end station id        end station name  end station latitude  \\\n",
       "0           434.0         9 Ave & W 18 St             40.743174   \n",
       "1           434.0         9 Ave & W 18 St             40.743174   \n",
       "2           406.0  Hicks St & Montague St             40.695128   \n",
       "3           262.0         Washington Park             40.691782   \n",
       "4           310.0     State St & Smith St             40.689269   \n",
       "\n",
       "   end station longitude   bikeid    usertype  birth year  gender  \n",
       "0             -74.003664  19678.0  Subscriber      1983.0     1.0  \n",
       "1             -74.003664  16649.0  Subscriber      1984.0     1.0  \n",
       "2             -73.995951  19599.0    Customer         NaN     0.0  \n",
       "3             -73.973730  16352.0  Subscriber      1960.0     1.0  \n",
       "4             -73.989129  15567.0  Subscriber      1983.0     1.0  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 362
    },
    "id": "4tkZzb9_Jq0h",
    "outputId": "ba130cbd-f48c-4c25-e3ea-667641aa9c2d"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-ec028e29-ebbc-4131-b560-c75603a0bea0\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tripduration</th>\n",
       "      <th>start station id</th>\n",
       "      <th>start station latitude</th>\n",
       "      <th>start station longitude</th>\n",
       "      <th>end station id</th>\n",
       "      <th>end station latitude</th>\n",
       "      <th>end station longitude</th>\n",
       "      <th>bikeid</th>\n",
       "      <th>birth year</th>\n",
       "      <th>gender</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.409200e+04</td>\n",
       "      <td>84091.000000</td>\n",
       "      <td>84091.000000</td>\n",
       "      <td>84091.000000</td>\n",
       "      <td>81248.000000</td>\n",
       "      <td>81248.000000</td>\n",
       "      <td>81248.000000</td>\n",
       "      <td>84091.000000</td>\n",
       "      <td>43168.000000</td>\n",
       "      <td>84091.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2.240372e+03</td>\n",
       "      <td>449.589813</td>\n",
       "      <td>40.731815</td>\n",
       "      <td>-73.990975</td>\n",
       "      <td>451.956479</td>\n",
       "      <td>40.731570</td>\n",
       "      <td>-73.990982</td>\n",
       "      <td>17604.454698</td>\n",
       "      <td>1973.738857</td>\n",
       "      <td>0.622124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.948168e+04</td>\n",
       "      <td>359.983426</td>\n",
       "      <td>0.021619</td>\n",
       "      <td>0.013123</td>\n",
       "      <td>368.024074</td>\n",
       "      <td>0.021642</td>\n",
       "      <td>0.013242</td>\n",
       "      <td>1661.417010</td>\n",
       "      <td>10.937208</td>\n",
       "      <td>0.673987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>6.100000e+01</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>40.646607</td>\n",
       "      <td>-74.017134</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>40.646607</td>\n",
       "      <td>-74.017134</td>\n",
       "      <td>14529.000000</td>\n",
       "      <td>1899.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>5.540000e+02</td>\n",
       "      <td>312.000000</td>\n",
       "      <td>40.716059</td>\n",
       "      <td>-74.001547</td>\n",
       "      <td>310.000000</td>\n",
       "      <td>40.716021</td>\n",
       "      <td>-74.001547</td>\n",
       "      <td>16178.000000</td>\n",
       "      <td>1966.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>9.580000e+02</td>\n",
       "      <td>404.000000</td>\n",
       "      <td>40.734011</td>\n",
       "      <td>-73.990697</td>\n",
       "      <td>404.000000</td>\n",
       "      <td>40.733812</td>\n",
       "      <td>-73.990741</td>\n",
       "      <td>17620.000000</td>\n",
       "      <td>1976.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.509000e+03</td>\n",
       "      <td>483.000000</td>\n",
       "      <td>40.747804</td>\n",
       "      <td>-73.981923</td>\n",
       "      <td>482.000000</td>\n",
       "      <td>40.747659</td>\n",
       "      <td>-73.981923</td>\n",
       "      <td>19075.000000</td>\n",
       "      <td>1982.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3.876479e+06</td>\n",
       "      <td>3020.000000</td>\n",
       "      <td>40.771522</td>\n",
       "      <td>-73.950048</td>\n",
       "      <td>3020.000000</td>\n",
       "      <td>40.771522</td>\n",
       "      <td>-73.950048</td>\n",
       "      <td>20564.000000</td>\n",
       "      <td>1997.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec028e29-ebbc-4131-b560-c75603a0bea0')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-ec028e29-ebbc-4131-b560-c75603a0bea0 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-ec028e29-ebbc-4131-b560-c75603a0bea0');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       tripduration  start station id  start station latitude  \\\n",
       "count  8.409200e+04      84091.000000            84091.000000   \n",
       "mean   2.240372e+03        449.589813               40.731815   \n",
       "std    1.948168e+04        359.983426                0.021619   \n",
       "min    6.100000e+01         72.000000               40.646607   \n",
       "25%    5.540000e+02        312.000000               40.716059   \n",
       "50%    9.580000e+02        404.000000               40.734011   \n",
       "75%    1.509000e+03        483.000000               40.747804   \n",
       "max    3.876479e+06       3020.000000               40.771522   \n",
       "\n",
       "       start station longitude  end station id  end station latitude  \\\n",
       "count             84091.000000    81248.000000          81248.000000   \n",
       "mean                -73.990975      451.956479             40.731570   \n",
       "std                   0.013123      368.024074              0.021642   \n",
       "min                 -74.017134       72.000000             40.646607   \n",
       "25%                 -74.001547      310.000000             40.716021   \n",
       "50%                 -73.990697      404.000000             40.733812   \n",
       "75%                 -73.981923      482.000000             40.747659   \n",
       "max                 -73.950048     3020.000000             40.771522   \n",
       "\n",
       "       end station longitude        bikeid    birth year        gender  \n",
       "count           81248.000000  84091.000000  43168.000000  84091.000000  \n",
       "mean              -73.990982  17604.454698   1973.738857      0.622124  \n",
       "std                 0.013242   1661.417010     10.937208      0.673987  \n",
       "min               -74.017134  14529.000000   1899.000000      0.000000  \n",
       "25%               -74.001547  16178.000000   1966.000000      0.000000  \n",
       "50%               -73.990741  17620.000000   1976.000000      1.000000  \n",
       "75%               -73.981923  19075.000000   1982.000000      1.000000  \n",
       "max               -73.950048  20564.000000   1997.000000      2.000000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "97L72XwXJ16k",
    "outputId": "b6bc6f2e-4b55-4fe9-b158-16f2cf73f86e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "\n",
      "RangeIndex: 84092 entries, 0 to 84091\n",
      "\n",
      "Data columns (total 15 columns):\n",
      "\n",
      " #   Column                   Non-Null Count  Dtype  \n",
      "\n",
      "---  ------                   --------------  -----  \n",
      "\n",
      " 0   tripduration             84092 non-null  int64  \n",
      "\n",
      " 1   starttime                84092 non-null  object \n",
      "\n",
      " 2   stoptime                 84091 non-null  object \n",
      "\n",
      " 3   start station id         84091 non-null  float64\n",
      "\n",
      " 4   start station name       84091 non-null  object \n",
      "\n",
      " 5   start station latitude   84091 non-null  float64\n",
      "\n",
      " 6   start station longitude  84091 non-null  float64\n",
      "\n",
      " 7   end station id           81248 non-null  float64\n",
      "\n",
      " 8   end station name         81248 non-null  object \n",
      "\n",
      " 9   end station latitude     81248 non-null  float64\n",
      "\n",
      " 10  end station longitude    81248 non-null  float64\n",
      "\n",
      " 11  bikeid                   84091 non-null  float64\n",
      "\n",
      " 12  usertype                 84091 non-null  object \n",
      "\n",
      " 13  birth year               43168 non-null  float64\n",
      "\n",
      " 14  gender                   84091 non-null  float64\n",
      "\n",
      "dtypes: float64(9), int64(1), object(5)\n",
      "\n",
      "memory usage: 9.6+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "A4DfN1neKZo5",
    "outputId": "036a89bd-d50a-448f-e1e5-73c8d9b631ea"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tripduration                   0\n",
       "starttime                      0\n",
       "stoptime                       1\n",
       "start station id               1\n",
       "start station name             1\n",
       "start station latitude         1\n",
       "start station longitude        1\n",
       "end station id              2844\n",
       "end station name            2844\n",
       "end station latitude        2844\n",
       "end station longitude       2844\n",
       "bikeid                         1\n",
       "usertype                       1\n",
       "birth year                 40924\n",
       "gender                         1\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 128
    },
    "id": "HilvqWyaLS6S",
    "outputId": "8afcf204-59b0-48df-dcf1-19f4fe4bfe10"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-86583245-0e17-4610-87ed-a98750fd698f\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tripduration</th>\n",
       "      <th>starttime</th>\n",
       "      <th>stoptime</th>\n",
       "      <th>start station id</th>\n",
       "      <th>start station name</th>\n",
       "      <th>start station latitude</th>\n",
       "      <th>start station longitude</th>\n",
       "      <th>end station id</th>\n",
       "      <th>end station name</th>\n",
       "      <th>end station latitude</th>\n",
       "      <th>end station longitude</th>\n",
       "      <th>bikeid</th>\n",
       "      <th>usertype</th>\n",
       "      <th>birth year</th>\n",
       "      <th>gender</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86583245-0e17-4610-87ed-a98750fd698f')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-86583245-0e17-4610-87ed-a98750fd698f button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-86583245-0e17-4610-87ed-a98750fd698f');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [tripduration, starttime, stoptime, start station id, start station name, start station latitude, start station longitude, end station id, end station name, end station latitude, end station longitude, bikeid, usertype, birth year, gender]\n",
       "Index: []"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['starttime'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 177
    },
    "id": "0m_sFX2ULjrr",
    "outputId": "2e8301b7-1236-4fa2-b557-56e6f3f4c13f"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-9a595983-af4d-4588-86ec-21ca75604fe8\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tripduration</th>\n",
       "      <th>starttime</th>\n",
       "      <th>stoptime</th>\n",
       "      <th>start station id</th>\n",
       "      <th>start station name</th>\n",
       "      <th>start station latitude</th>\n",
       "      <th>start station longitude</th>\n",
       "      <th>end station id</th>\n",
       "      <th>end station name</th>\n",
       "      <th>end station latitude</th>\n",
       "      <th>end station longitude</th>\n",
       "      <th>bikeid</th>\n",
       "      <th>usertype</th>\n",
       "      <th>birth year</th>\n",
       "      <th>gender</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>84091</th>\n",
       "      <td>804</td>\n",
       "      <td>2013-06-08 14:35:33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a595983-af4d-4588-86ec-21ca75604fe8')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-9a595983-af4d-4588-86ec-21ca75604fe8 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-9a595983-af4d-4588-86ec-21ca75604fe8');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       tripduration            starttime stoptime  start station id  \\\n",
       "84091           804  2013-06-08 14:35:33      NaN               NaN   \n",
       "\n",
       "      start station name  start station latitude  start station longitude  \\\n",
       "84091                NaN                     NaN                      NaN   \n",
       "\n",
       "       end station id end station name  end station latitude  \\\n",
       "84091             NaN              NaN                   NaN   \n",
       "\n",
       "       end station longitude  bikeid usertype  birth year  gender  \n",
       "84091                    NaN     NaN      NaN         NaN     NaN  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['stoptime'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "id": "_9FQy8XPLrb7"
   },
   "outputs": [],
   "source": [
    "df = df[:-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "NPIoV0WLLwRa",
    "outputId": "9f6cfeb0-0fc6-486a-e03c-46f78cbaf1f3"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tripduration                   0\n",
       "starttime                      0\n",
       "stoptime                       0\n",
       "start station id               0\n",
       "start station name             0\n",
       "start station latitude         0\n",
       "start station longitude        0\n",
       "end station id              2843\n",
       "end station name            2843\n",
       "end station latitude        2843\n",
       "end station longitude       2843\n",
       "bikeid                         0\n",
       "usertype                       0\n",
       "birth year                 40923\n",
       "gender                         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "qLcSgUC4L7Un",
    "outputId": "67e18f6d-69e7-4078-dc5e-da4c7ca1cda6"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'numpy.float64'>\n",
      "\n",
      "40.7423543\n"
     ]
    }
   ],
   "source": [
    "print(type(df[\"start station latitude\"][0]))\n",
    "print(df[\"start station latitude\"][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "Fa27QWltOsWl",
    "outputId": "ca7e30c3-c1ab-4367-e19f-3d7924c5c891"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Broadway & W 24 St', 'Hicks St & Montague St',\n",
       "       'E 15 St & Irving Pl', 'Little West St & 1 Pl', 'W 37 St & 5 Ave',\n",
       "       'Broadway & E 14 St', '9 Ave & W 22 St',\n",
       "       'Stanton St & Chrystie St', '9 Ave & W 14 St', 'W 54 St & 9 Ave',\n",
       "       'Henry St & Grand St', 'DeKalb Ave & S Portland Ave',\n",
       "       'Broadway & W 29 St', 'E 33 St & 2 Ave', 'Murray St & West St',\n",
       "       'E 20 St & Park Ave', 'Lispenard St & Broadway', 'W 26 St & 8 Ave',\n",
       "       'W 4 St & 7 Ave S', 'E 58 St & 3 Ave', 'W 53 St & 10 Ave',\n",
       "       'W 22 St & 8 Ave', 'W 13 St & 7 Ave', 'E 31 St & 3 Ave',\n",
       "       'Cleveland Pl & Spring St', 'Allen St & Stanton St',\n",
       "       'W 15 St & 7 Ave', 'E 4 St & 2 Ave', 'Forsyth St & Broome St',\n",
       "       'Christopher St & Greenwich St', 'Bayard St & Baxter St',\n",
       "       'Atlantic Ave & Fort Greene Pl', 'Ashland Pl & Hanson Pl',\n",
       "       'E 10 St & Avenue A', 'W 41 St & 8 Ave', 'Lafayette St & E 8 St',\n",
       "       'W 45 St & 6 Ave (1)', 'Rivington St & Chrystie St',\n",
       "       '10 Ave & W 28 St', 'Pershing Square South', '6 Ave & Broome St',\n",
       "       'NYCBS Depot - DEL', 'Harrison St & Hudson St',\n",
       "       'E 7 St & Avenue A', 'Franklin St & W Broadway',\n",
       "       'W 52 St & 11 Ave', 'Broadway & W 41 St', 'Perry St & Bleecker St',\n",
       "       'Forsyth St & Canal St', '8 Ave & W 31 St N', '8 Ave & W 33 St',\n",
       "       'Washington Pl & 6 Ave', '6 Ave & W 33 St', 'W 51 St & 6 Ave',\n",
       "       'Broadway & Berry St', 'W 33 St & 7 Ave', 'St Marks Pl & 2 Ave',\n",
       "       'Catherine St & Monroe St', 'E 11 St & Broadway',\n",
       "       'S 5 Pl & S 5 St', 'Great Jones St', 'Mercer St & Spring St',\n",
       "       'W 20 St & 8 Ave', 'Emerson Pl & Myrtle Ave',\n",
       "       'Shevchenko Pl & E 7 St', 'Lawrence St & Willoughby St',\n",
       "       'Cadman Plaza W & Pierrepont St', '1 Ave & E 16 St',\n",
       "       'S 3 St & Bedford Ave', 'Henry St & Atlantic Ave',\n",
       "       'Clinton St & Joralemon St', 'E 52 St & 2 Ave',\n",
       "       'Willoughby Ave & Hall St', 'E 60 St & York Ave',\n",
       "       'Grand Army Plaza & Central Park S', 'W 46 St & 11 Ave',\n",
       "       'Pike St & E Broadway', 'Clermont Ave & Lafayette Ave',\n",
       "       'Suffolk St & Stanton St', '2 Ave & E 31 St',\n",
       "       'Norfolk St & Broome St', 'Watts St & Greenwich St',\n",
       "       'Adelphi St & Myrtle Ave', 'Hudson St & Reade St',\n",
       "       'W 25 St & 6 Ave', 'W 39 St & 9 Ave', '8 Ave & W 52 St',\n",
       "       'Broadway & W 37 St', '12 Ave & W 40 St',\n",
       "       'South St & Whitehall St', 'Washington Square E',\n",
       "       'Mott St & Prince St', 'Bank St & Washington St',\n",
       "       'John St & William St', 'Old Fulton St', 'E 20 St & 2 Ave',\n",
       "       'Jay St & Tech Pl', 'Washington St & Gansevoort St',\n",
       "       'W 20 St & 11 Ave', 'E 3 St & 1 Ave',\n",
       "       'MacDougal St & Washington Sq', 'Fulton St & Washington Ave',\n",
       "       '6 Ave & Canal St', 'Bus Slip & State St',\n",
       "       'Willoughby St & Fleet St', 'Concord St & Bridge St',\n",
       "       '9 Ave & W 45 St', 'W 18 St & 6 Ave', 'E 5 St & Avenue C',\n",
       "       'E 39 St & 2 Ave', 'Mercer St & Bleecker St S',\n",
       "       'DeKalb Ave & Hudson Ave', 'E 47 St & 1 Ave', 'W 27 St & 7 Ave',\n",
       "       '11 Ave & W 41 St', 'West St & Chambers St', 'E 11 St & 1 Ave',\n",
       "       'St James Pl & Pearl St', 'W Broadway & Spring St',\n",
       "       'S 4 St & Wythe Ave', 'Clinton St & Grand St', 'E 2 St & Avenue C',\n",
       "       'St James Pl & Oliver St', 'Sullivan St & Washington Sq',\n",
       "       'W 14 St & The High Line', 'W 49 St & 8 Ave', 'Broadway & W 53 St',\n",
       "       'W 38 St & 8 Ave', 'Greenwich Ave & 8 Ave',\n",
       "       'Rivington St & Ridge St', 'LaGuardia Pl & W 3 St',\n",
       "       'Metropolitan Ave & Bedford Ave', 'Greenwich St & North Moore St',\n",
       "       'Atlantic Ave & Furman St', 'University Pl & E 14 St',\n",
       "       'E 39 St & 3 Ave', 'Broadway & E 22 St', 'Centre St & Worth St',\n",
       "       '3 Ave & Schermerhorn St', 'W 22 St & 10 Ave',\n",
       "       'Allen St & Rivington St', 'Cliff St & Fulton St',\n",
       "       'W 17 St & 8 Ave', 'Cumberland St & Lafayette Ave',\n",
       "       'W 59 St & 10 Ave', 'Broadway & W 51 St',\n",
       "       'Water - Whitehall Plaza', 'Fulton St & Clermont Ave',\n",
       "       'W 47 St & 10 Ave', 'W 20 St & 7 Ave', 'Carmine St & 6 Ave',\n",
       "       'Greenwich St & W Houston St', 'Broadway & W 32 St',\n",
       "       'E 10 St & 5 Ave', 'Lefferts Pl & Franklin Ave', '2 Ave & E 58 St',\n",
       "       'St Marks Pl & 1 Ave', 'W 24 St & 7 Ave', '11 Ave & W 27 St',\n",
       "       'W 16 St & The High Line', 'E 27 St & 1 Ave', 'W 43 St & 10 Ave',\n",
       "       'Bond St & Schermerhorn St', 'Lexington Ave & E 29 St',\n",
       "       'W 29 St & 9 Ave', 'Washington Ave & Greene Ave',\n",
       "       'Kent Ave & S 11 St', 'W 21 St & 6 Ave', 'E 2 St & 2 Ave',\n",
       "       '9 Ave & W 16 St', 'Howard St & Centre St',\n",
       "       'MacDougal St & Prince St', 'Washington Ave & Park Ave',\n",
       "       'E 14 St & Avenue B', 'Clark St & Henry St', 'Broadway & W 49 St',\n",
       "       'Clinton Ave & Myrtle Ave', 'Pearl St & Anchorage Pl',\n",
       "       'E 25 St & 2 Ave', 'E 17 St & Broadway',\n",
       "       'S Portland Ave & Hanson Pl', 'W 26 St & 10 Ave',\n",
       "       'E 51 St & Lexington Ave', 'Division St & Bowery',\n",
       "       'Barrow St & Hudson St', 'Cadman Plaza E & Red Cross Pl',\n",
       "       'Warren St & Church St', 'W 34 St & 11 Ave', 'NYCBS Test',\n",
       "       'West Thames St', 'Allen St & Hester St',\n",
       "       'DeKalb Ave & Vanderbilt Ave', 'E 32 St & Park Ave',\n",
       "       'Leonard St & Church St', 'W 13 St & 5 Ave',\n",
       "       'Bialystoker Pl & Delancey St', 'Fulton St & Grand Ave',\n",
       "       'E 53 St & Madison Ave', 'Cadman Plaza West & Montague St',\n",
       "       'Broadway & W 58 St', 'E 47 St & 2 Ave', 'W 13 St & 6 Ave',\n",
       "       'Macon St & Nostrand Ave', 'Fulton St & Rockwell Pl',\n",
       "       'W 37 St & 10 Ave', 'Broadway & Battery Pl', 'Washington Park',\n",
       "       'E 19 St & 3 Ave', 'Maiden Ln & Pearl St', '1 Ave & E 44 St',\n",
       "       '11 Ave & W 59 St', 'Columbia Heights & Cranberry St',\n",
       "       'South End Ave & Liberty St', 'Broadway & W 56 St',\n",
       "       'Bank St & Hudson St', 'Central Park S & 6 Ave',\n",
       "       'E 53 St & Lexington Ave', 'Monroe St & Bedford Ave',\n",
       "       'Pershing Square North', '1 Ave & E 30 St',\n",
       "       'Canal St & Rutgers St', 'Market St & Cherry St',\n",
       "       'Reade St & Broadway', 'Greenwich St & Warren St',\n",
       "       'E 20 St & FDR Drive', 'E 13 St & Avenue A',\n",
       "       'Lexington Ave & E 24 St', 'E 2 St & Avenue B',\n",
       "       'Lafayette Ave & Classon Ave', 'W 11 St & 6 Ave',\n",
       "       'Lafayette Ave & St James Pl', 'Barclay St & Church St',\n",
       "       'W 52 St & 9 Ave', 'E 9 St & Avenue C', 'Old Slip & Front St',\n",
       "       'Johnson St & Gold St', 'York St & Jay St',\n",
       "       'South St & Gouverneur Ln', '1 Ave & E 18 St', 'E 12 St & 3 Ave',\n",
       "       'Broad St & Bridge St', 'State St & Smith St',\n",
       "       'Fulton St & William St', 'E 6 St & Avenue B', 'E 15 St & 3 Ave',\n",
       "       'Duane St & Greenwich St', 'E 51 St & 1 Ave', 'Front St & Gold St',\n",
       "       'Broadway & W 38 St', 'Madison St & Montgomery St', 'Cherry St',\n",
       "       'E 11 St & 2 Ave', 'Columbia St & Rivington St', 'W 42 St & 8 Ave',\n",
       "       'E 56 St & 3 Ave', '5 Ave & E 29 St', 'Spruce St & Nassau St',\n",
       "       'E 24 St & Park Ave S', 'E 25 St & 1 Ave',\n",
       "       'Lafayette St & Jersey St N', 'Avenue D & E 8 St',\n",
       "       'Greenwich Ave & Charles St', 'Front St & Washington St',\n",
       "       'Fulton St & Broadway', 'NYCBS Depot - FAR', 'E 47 St & Park Ave',\n",
       "       'Carlton Ave & Flushing Ave', 'Lafayette Ave & Fort Greene Pl',\n",
       "       'Grand St & Havemeyer St', 'Carlton Ave & Park Ave',\n",
       "       'Washington Pl & Broadway', 'FDR Drive & E 35 St',\n",
       "       'E 23 St & 1 Ave', 'Broadway & W 60 St', 'E 55 St & Lexington Ave',\n",
       "       'W 56 St & 10 Ave', 'W 31 St & 7 Ave', 'Vesey Pl & River Terrace',\n",
       "       'Park Ave & St Edwards St', 'E 55 St & 2 Ave',\n",
       "       'Lexington Ave & Classon Ave', 'Liberty St & Broadway',\n",
       "       'W 52 St & 5 Ave', 'E 30 St & Park Ave S', 'E 40 St & 5 Ave',\n",
       "       'Henry St & Poplar St', 'Clinton Ave & Flushing Ave',\n",
       "       'E 56 St & Madison Ave', 'Pike St & Monroe St',\n",
       "       'Grand St & Greene St', 'NYCBS Depot - SSP',\n",
       "       'E 48 St & Madison Ave', 'E 16 St & 5 Ave', 'E 33 St & 5 Ave',\n",
       "       'W 56 St & 6 Ave', 'E 6 St & Avenue D', 'W 45 St & 8 Ave',\n",
       "       'Franklin Ave & Myrtle Ave', 'Cadman Plaza E & Tillary St',\n",
       "       'Clermont Ave & Park Ave', 'Front St & Maiden Ln',\n",
       "       'Willoughby Ave & Walworth St', 'Madison St & Clinton St',\n",
       "       'Broadway & W 36 St', 'Pearl St & Hanover Square',\n",
       "       'William St & Pine St', 'Avenue D & E 3 St',\n",
       "       'Stanton St & Mangin St', 'Wythe Ave & Metropolitan Ave',\n",
       "       '9 Ave & W 18 St', 'Clinton St & Tillary St',\n",
       "       'Hancock St & Bedford Ave', 'Duffield St & Willoughby St',\n",
       "       'Peck Slip & Front St', 'Monroe St & Classon Ave',\n",
       "       'Nassau St & Navy St', 'Myrtle Ave & St Edwards St',\n",
       "       'Railroad Ave & Kay Ave', 'Sands St & Navy St', 'E 45 St & 3 Ave',\n",
       "       'W 43 St & 6 Ave', 'Avenue D & E 12 St', 'W 44 St & 5 Ave',\n",
       "       'E 48 St & 3 Ave', 'Elizabeth St & Hester St',\n",
       "       '3969.TEMP (Bike The Branches - Central Branch)',\n",
       "       'Dean St & 4 Ave', 'Bedford Ave & S 9 St',\n",
       "       'E 43 St & Vanderbilt Ave', 'Hanover Pl & Livingston St',\n",
       "       'Gallatin Pl & Livingston St', 'Pitt St & Stanton St',\n",
       "       'Laight St & Hudson St', 'Centre St & Chambers St', 'MLSWKiosk'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['start station name'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "TmZRQoznPZXB",
    "outputId": "ae043822-6817-4f6d-ff3f-da909f80ed54"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "E 17 St & Broadway            919\n",
       "W 20 St & 11 Ave              860\n",
       "Broadway & W 58 St            834\n",
       "Broadway & E 14 St            833\n",
       "Broadway & W 24 St            769\n",
       "                             ... \n",
       "Hanover Pl & Livingston St     16\n",
       "E 48 St & 3 Ave                 6\n",
       "Elizabeth St & Hester St        5\n",
       "Mlswkiosk                       2\n",
       "E 40 St & 5 Ave                 1\n",
       "Name: start station name, Length: 335, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def camel_case(city):\n",
    "    try:\n",
    "        city = city.split(' ')\n",
    "        city = ' '.join([x.lower().capitalize() for x in city])\n",
    "        if city == 'Unknown':\n",
    "            return np.nan\n",
    "        else:\n",
    "            return city\n",
    "    except:\n",
    "        return np.nan\n",
    "    \n",
    "# Apply camel_case function to City column\n",
    "df['start station name'] = df['start station name'].apply(camel_case)\n",
    "df['start station name'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "DFgFNnNSQ4Mi",
    "outputId": "2d1865e5-f5e3-4abd-f9f8-2b3bd63b25f0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tripduration               84091\n",
       "starttime                  84091\n",
       "stoptime                   84091\n",
       "start station id           84091\n",
       "start station name         84091\n",
       "start station latitude     84091\n",
       "start station longitude    84091\n",
       "end station id             81248\n",
       "end station name           81248\n",
       "end station latitude       81248\n",
       "end station longitude      81248\n",
       "bikeid                     84091\n",
       "usertype                   84091\n",
       "birth year                 43168\n",
       "gender                     84091\n",
       "dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "0QZiO75JREq4",
    "outputId": "cbc9b7b6-82c2-4e58-e39d-0ff2d330d7ef"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1116\n"
     ]
    }
   ],
   "source": [
    "df[\"tripduration\"] = pd.to_numeric(df[\"tripduration\"])\n",
    "res = df.iloc[52323]\n",
    "print(res[\"tripduration\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "ezeu-iSocVpI",
    "outputId": "d811463c-9806-452a-8e6e-331972b267b0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_filtered = df[df['tripduration'] != \"tripduration\"]\n",
    "df_filtered[\"tripduration\"] = pd.to_numeric(df_filtered[\"tripduration\"])\n",
    "df = df_filtered\n",
    "type(df[\"tripduration\"][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "ITbuPwCldgiW",
    "outputId": "db71d6d9-78f0-4de5-c159-7e3bf5498807"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.float64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df[\"start station latitude\"][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "2kZztvFodG9D",
    "outputId": "a80fe195-7722-4c00-9512-b4f404a7cc5a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.float64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df[\"end station longitude\"][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "fi2lnGrzdxzv",
    "outputId": "874e8a6b-a80c-4ac4-d852-391934ed4540"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.float64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df[\"bikeid\"][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "oUl-jDdVd4qj",
    "outputId": "36d17edf-7787-4910-88a8-2793413aaa96"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.float64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df[\"birth year\"][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "9ocH2KnRd_6X",
    "outputId": "9ac6e9ea-eb5e-4673-f329-81cc71ebb00e"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.float64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df[\"gender\"][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "z5bpfXKeeCI6",
    "outputId": "60a6e3c7-5f38-4205-d40b-e1dc9cf1dfa4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df[\"starttime\"][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "Iir1Lxu4eJci",
    "outputId": "a3569b05-d630-4212-be84-25c661d0cca3"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas._libs.tslibs.timestamps.Timestamp"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"starttime\"] = pd.to_datetime(df[\"starttime\"])\n",
    "df[\"stoptime\"] = pd.to_datetime(df[\"stoptime\"])\n",
    "type(df[\"starttime\"][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "Y7MJ37pheYUL",
    "outputId": "d0d66b34-374f-4f1e-ef8a-5ccc84f69729"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"starttime\"][0] < df[\"stoptime\"][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "XUzysvtCec97",
    "outputId": "fbeaaf98-c76e-449f-c3de-8b6356101b6a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "\n",
      "Int64Index: 84091 entries, 0 to 84090\n",
      "\n",
      "Data columns (total 15 columns):\n",
      "\n",
      " #   Column                   Non-Null Count  Dtype         \n",
      "\n",
      "---  ------                   --------------  -----         \n",
      "\n",
      " 0   tripduration             84091 non-null  int64         \n",
      "\n",
      " 1   starttime                84091 non-null  datetime64[ns]\n",
      "\n",
      " 2   stoptime                 84091 non-null  datetime64[ns]\n",
      "\n",
      " 3   start station id         84091 non-null  float64       \n",
      "\n",
      " 4   start station name       84091 non-null  object        \n",
      "\n",
      " 5   start station latitude   84091 non-null  float64       \n",
      "\n",
      " 6   start station longitude  84091 non-null  float64       \n",
      "\n",
      " 7   end station id           81248 non-null  float64       \n",
      "\n",
      " 8   end station name         81248 non-null  object        \n",
      "\n",
      " 9   end station latitude     81248 non-null  float64       \n",
      "\n",
      " 10  end station longitude    81248 non-null  float64       \n",
      "\n",
      " 11  bikeid                   84091 non-null  float64       \n",
      "\n",
      " 12  usertype                 84091 non-null  object        \n",
      "\n",
      " 13  birth year               43168 non-null  float64       \n",
      "\n",
      " 14  gender                   84091 non-null  float64       \n",
      "\n",
      "dtypes: datetime64[ns](2), float64(9), int64(1), object(3)\n",
      "\n",
      "memory usage: 12.3+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "9fvyUnBMeq1D",
    "outputId": "d73a6a6e-9c93-4aad-efdd-dc08275ad1fb"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number of outliers: 136\n",
      "\n",
      "max outlier value: 1941.0\n",
      "\n",
      "min outlier value: 1899.0\n"
     ]
    }
   ],
   "source": [
    "def find_outliers_IQR(df):\n",
    "   q1=df.quantile(0.25)\n",
    "   q3=df.quantile(0.75)\n",
    "   IQR=q3-q1\n",
    "   outliers = df[((df<(q1-1.5*IQR)) | (df>(q3+1.5*IQR)))]\n",
    "   return outliers\n",
    "outliers = find_outliers_IQR(df[\"birth year\"])\n",
    "print(\"number of outliers: \" + str(len(outliers)))\n",
    "print(\"max outlier value: \" + str(outliers.max()))\n",
    "print(\"min outlier value: \" + str(outliers.min()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "9KrCTvlUe9tK",
    "outputId": "33409753-cdef-415a-df1e-a7d581078d6b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0    40991\n",
       "1.0    33885\n",
       "2.0     9215\n",
       "Name: gender, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"gender\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "o_mvrmomfgXD",
    "outputId": "6b513c68-2116-4545-8011-32d3aefc8c4f"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0    2985\n",
       "2.0     849\n",
       "Name: gender, dtype: int64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp_df = df[df[\"birth year\"] <= 1957]\n",
    "temp_df[\"gender\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "2LQO65xHf3jb",
    "outputId": "7d14b4fd-bd8b-4402-e39f-b42ea5a8fdc3"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(84091, 15)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "id": "-hd3Xx2IgNNY"
   },
   "outputs": [],
   "source": [
    "df.to_csv('cleaned_dataset.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "vqKm_OQzILo_"
   },
   "source": [
    "# **SPRINT 3**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "elN26Ce5Bi1F",
    "outputId": "2b6b8e7b-09d3-4b90-85e5-4cff588f3b2b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       tripduration            starttime             stoptime  \\\n",
      "\n",
      "0               695  2013-06-01 00:00:01  2013-06-01 00:11:36   \n",
      "\n",
      "1               693  2013-06-01 00:00:08  2013-06-01 00:11:41   \n",
      "\n",
      "2              2059  2013-06-01 00:00:44  2013-06-01 00:35:03   \n",
      "\n",
      "3               123  2013-06-01 00:01:04  2013-06-01 00:03:07   \n",
      "\n",
      "4              1521  2013-06-01 00:01:22  2013-06-01 00:26:43   \n",
      "\n",
      "...             ...                  ...                  ...   \n",
      "\n",
      "84086          1506  2013-06-08 14:35:22  2013-06-08 15:00:28   \n",
      "\n",
      "84087          1478  2013-06-08 14:35:22  2013-06-08 15:00:00   \n",
      "\n",
      "84088           873  2013-06-08 14:35:31  2013-06-08 14:50:04   \n",
      "\n",
      "84089          2054  2013-06-08 14:34:51  2013-06-08 15:09:05   \n",
      "\n",
      "84090          1179  2013-06-08 14:35:28  2013-06-08 14:55:07   \n",
      "\n",
      "\n",
      "\n",
      "       start station id       start station name  start station latitude  \\\n",
      "\n",
      "0                 444.0       Broadway & W 24 St               40.742354   \n",
      "\n",
      "1                 444.0       Broadway & W 24 St               40.742354   \n",
      "\n",
      "2                 406.0   Hicks St & Montague St               40.695128   \n",
      "\n",
      "3                 475.0      E 15 St & Irving Pl               40.735243   \n",
      "\n",
      "4                2008.0    Little West St & 1 Pl               40.705693   \n",
      "\n",
      "...                 ...                      ...                     ...   \n",
      "\n",
      "84086             422.0         W 59 St & 10 Ave               40.770513   \n",
      "\n",
      "84087             337.0      Old Slip & Front St               40.703799   \n",
      "\n",
      "84088             447.0          8 Ave & W 52 St               40.763707   \n",
      "\n",
      "84089             229.0           Great Jones St               40.727434   \n",
      "\n",
      "84090             259.0  South St & Whitehall St               40.701221   \n",
      "\n",
      "\n",
      "\n",
      "       start station longitude  end station id            end station name  \\\n",
      "\n",
      "0                   -73.989151           434.0             9 Ave & W 18 St   \n",
      "\n",
      "1                   -73.989151           434.0             9 Ave & W 18 St   \n",
      "\n",
      "2                   -73.995951           406.0      Hicks St & Montague St   \n",
      "\n",
      "3                   -73.987586           262.0             Washington Park   \n",
      "\n",
      "4                   -74.016777           310.0         State St & Smith St   \n",
      "\n",
      "...                        ...             ...                         ...   \n",
      "\n",
      "84086               -73.988038           212.0     W 16 St & The High Line   \n",
      "\n",
      "84087               -74.008387           342.0  Columbia St & Rivington St   \n",
      "\n",
      "84088               -73.985162           404.0             9 Ave & W 14 St   \n",
      "\n",
      "84089               -73.993790          2012.0             E 27 St & 1 Ave   \n",
      "\n",
      "84090               -74.012342           383.0  Greenwich Ave & Charles St   \n",
      "\n",
      "\n",
      "\n",
      "       end station latitude  end station longitude   bikeid    usertype  \\\n",
      "\n",
      "0                 40.743174             -74.003664  19678.0  Subscriber   \n",
      "\n",
      "1                 40.743174             -74.003664  16649.0  Subscriber   \n",
      "\n",
      "2                 40.695128             -73.995951  19599.0    Customer   \n",
      "\n",
      "3                 40.691782             -73.973730  16352.0  Subscriber   \n",
      "\n",
      "4                 40.689269             -73.989129  15567.0  Subscriber   \n",
      "\n",
      "...                     ...                    ...      ...         ...   \n",
      "\n",
      "84086             40.743349             -74.006818  19225.0    Customer   \n",
      "\n",
      "84087             40.717400             -73.980166  19730.0    Customer   \n",
      "\n",
      "84088             40.740583             -74.005509  15606.0    Customer   \n",
      "\n",
      "84089             40.739445             -73.976806  18597.0  Subscriber   \n",
      "\n",
      "84090             40.735238             -74.000271  14665.0  Subscriber   \n",
      "\n",
      "\n",
      "\n",
      "       birth year  gender  \n",
      "\n",
      "0          1983.0     1.0  \n",
      "\n",
      "1          1984.0     1.0  \n",
      "\n",
      "2             NaN     0.0  \n",
      "\n",
      "3          1960.0     1.0  \n",
      "\n",
      "4          1983.0     1.0  \n",
      "\n",
      "...           ...     ...  \n",
      "\n",
      "84086         NaN     0.0  \n",
      "\n",
      "84087         NaN     0.0  \n",
      "\n",
      "84088         NaN     0.0  \n",
      "\n",
      "84089      1977.0     1.0  \n",
      "\n",
      "84090      1968.0     2.0  \n",
      "\n",
      "\n",
      "\n",
      "[84091 rows x 15 columns]\n"
     ]
    }
   ],
   "source": [
    "path = \"/content/cleaned_dataset.csv\"\n",
    "edadf = pd.read_csv(path)\n",
    "print(edadf)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "id": "ebMrdeoVl_wM"
   },
   "outputs": [],
   "source": [
    "temp = edadf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 458
    },
    "id": "YwugKZmshNrB",
    "outputId": "a8672327-efb2-4db0-ba61-a76643659f89"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-a527e0f6-9e38-44db-9975-e563d6869633\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tripduration</th>\n",
       "      <th>starttime</th>\n",
       "      <th>stoptime</th>\n",
       "      <th>start station id</th>\n",
       "      <th>start station name</th>\n",
       "      <th>start station latitude</th>\n",
       "      <th>start station longitude</th>\n",
       "      <th>end station id</th>\n",
       "      <th>end station name</th>\n",
       "      <th>end station latitude</th>\n",
       "      <th>end station longitude</th>\n",
       "      <th>bikeid</th>\n",
       "      <th>usertype</th>\n",
       "      <th>birth year</th>\n",
       "      <th>gender</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>695</td>\n",
       "      <td>2013-06-01 00:00:01</td>\n",
       "      <td>2013-06-01 00:11:36</td>\n",
       "      <td>444.0</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>40.742354</td>\n",
       "      <td>-73.989151</td>\n",
       "      <td>434.0</td>\n",
       "      <td>9 Ave &amp; W 18 St</td>\n",
       "      <td>40.743174</td>\n",
       "      <td>-74.003664</td>\n",
       "      <td>19678.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1983.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>693</td>\n",
       "      <td>2013-06-01 00:00:08</td>\n",
       "      <td>2013-06-01 00:11:41</td>\n",
       "      <td>444.0</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>40.742354</td>\n",
       "      <td>-73.989151</td>\n",
       "      <td>434.0</td>\n",
       "      <td>9 Ave &amp; W 18 St</td>\n",
       "      <td>40.743174</td>\n",
       "      <td>-74.003664</td>\n",
       "      <td>16649.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1984.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2059</td>\n",
       "      <td>2013-06-01 00:00:44</td>\n",
       "      <td>2013-06-01 00:35:03</td>\n",
       "      <td>406.0</td>\n",
       "      <td>Hicks St &amp; Montague St</td>\n",
       "      <td>40.695128</td>\n",
       "      <td>-73.995951</td>\n",
       "      <td>406.0</td>\n",
       "      <td>Hicks St &amp; Montague St</td>\n",
       "      <td>40.695128</td>\n",
       "      <td>-73.995951</td>\n",
       "      <td>19599.0</td>\n",
       "      <td>Customer</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>123</td>\n",
       "      <td>2013-06-01 00:01:04</td>\n",
       "      <td>2013-06-01 00:03:07</td>\n",
       "      <td>475.0</td>\n",
       "      <td>E 15 St &amp; Irving Pl</td>\n",
       "      <td>40.735243</td>\n",
       "      <td>-73.987586</td>\n",
       "      <td>262.0</td>\n",
       "      <td>Washington Park</td>\n",
       "      <td>40.691782</td>\n",
       "      <td>-73.973730</td>\n",
       "      <td>16352.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1960.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1521</td>\n",
       "      <td>2013-06-01 00:01:22</td>\n",
       "      <td>2013-06-01 00:26:43</td>\n",
       "      <td>2008.0</td>\n",
       "      <td>Little West St &amp; 1 Pl</td>\n",
       "      <td>40.705693</td>\n",
       "      <td>-74.016777</td>\n",
       "      <td>310.0</td>\n",
       "      <td>State St &amp; Smith St</td>\n",
       "      <td>40.689269</td>\n",
       "      <td>-73.989129</td>\n",
       "      <td>15567.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1983.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a527e0f6-9e38-44db-9975-e563d6869633')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-a527e0f6-9e38-44db-9975-e563d6869633 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-a527e0f6-9e38-44db-9975-e563d6869633');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "   tripduration            starttime             stoptime  start station id  \\\n",
       "0           695  2013-06-01 00:00:01  2013-06-01 00:11:36             444.0   \n",
       "1           693  2013-06-01 00:00:08  2013-06-01 00:11:41             444.0   \n",
       "2          2059  2013-06-01 00:00:44  2013-06-01 00:35:03             406.0   \n",
       "3           123  2013-06-01 00:01:04  2013-06-01 00:03:07             475.0   \n",
       "4          1521  2013-06-01 00:01:22  2013-06-01 00:26:43            2008.0   \n",
       "\n",
       "       start station name  start station latitude  start station longitude  \\\n",
       "0      Broadway & W 24 St               40.742354               -73.989151   \n",
       "1      Broadway & W 24 St               40.742354               -73.989151   \n",
       "2  Hicks St & Montague St               40.695128               -73.995951   \n",
       "3     E 15 St & Irving Pl               40.735243               -73.987586   \n",
       "4   Little West St & 1 Pl               40.705693               -74.016777   \n",
       "\n",
       "   end station id        end station name  end station latitude  \\\n",
       "0           434.0         9 Ave & W 18 St             40.743174   \n",
       "1           434.0         9 Ave & W 18 St             40.743174   \n",
       "2           406.0  Hicks St & Montague St             40.695128   \n",
       "3           262.0         Washington Park             40.691782   \n",
       "4           310.0     State St & Smith St             40.689269   \n",
       "\n",
       "   end station longitude   bikeid    usertype  birth year  gender  \n",
       "0             -74.003664  19678.0  Subscriber      1983.0     1.0  \n",
       "1             -74.003664  16649.0  Subscriber      1984.0     1.0  \n",
       "2             -73.995951  19599.0    Customer         NaN     0.0  \n",
       "3             -73.973730  16352.0  Subscriber      1960.0     1.0  \n",
       "4             -73.989129  15567.0  Subscriber      1983.0     1.0  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 362
    },
    "id": "dPErWSV6ha5J",
    "outputId": "ad53d6e2-990a-48ce-9bec-a4d66acffaa3"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-30bd8e68-a8e6-4e2e-8d6c-9696f0e4b09a\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tripduration</th>\n",
       "      <th>start station id</th>\n",
       "      <th>start station latitude</th>\n",
       "      <th>start station longitude</th>\n",
       "      <th>end station id</th>\n",
       "      <th>end station latitude</th>\n",
       "      <th>end station longitude</th>\n",
       "      <th>bikeid</th>\n",
       "      <th>birth year</th>\n",
       "      <th>gender</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.409100e+04</td>\n",
       "      <td>84091.000000</td>\n",
       "      <td>84091.000000</td>\n",
       "      <td>84091.000000</td>\n",
       "      <td>81248.000000</td>\n",
       "      <td>81248.000000</td>\n",
       "      <td>81248.000000</td>\n",
       "      <td>84091.000000</td>\n",
       "      <td>43168.000000</td>\n",
       "      <td>84091.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2.240389e+03</td>\n",
       "      <td>449.589813</td>\n",
       "      <td>40.731815</td>\n",
       "      <td>-73.990975</td>\n",
       "      <td>451.956479</td>\n",
       "      <td>40.731570</td>\n",
       "      <td>-73.990982</td>\n",
       "      <td>17604.454698</td>\n",
       "      <td>1973.738857</td>\n",
       "      <td>0.622124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.948179e+04</td>\n",
       "      <td>359.983426</td>\n",
       "      <td>0.021619</td>\n",
       "      <td>0.013123</td>\n",
       "      <td>368.024074</td>\n",
       "      <td>0.021642</td>\n",
       "      <td>0.013242</td>\n",
       "      <td>1661.417010</td>\n",
       "      <td>10.937208</td>\n",
       "      <td>0.673987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>6.100000e+01</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>40.646607</td>\n",
       "      <td>-74.017134</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>40.646607</td>\n",
       "      <td>-74.017134</td>\n",
       "      <td>14529.000000</td>\n",
       "      <td>1899.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>5.540000e+02</td>\n",
       "      <td>312.000000</td>\n",
       "      <td>40.716059</td>\n",
       "      <td>-74.001547</td>\n",
       "      <td>310.000000</td>\n",
       "      <td>40.716021</td>\n",
       "      <td>-74.001547</td>\n",
       "      <td>16178.000000</td>\n",
       "      <td>1966.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>9.580000e+02</td>\n",
       "      <td>404.000000</td>\n",
       "      <td>40.734011</td>\n",
       "      <td>-73.990697</td>\n",
       "      <td>404.000000</td>\n",
       "      <td>40.733812</td>\n",
       "      <td>-73.990741</td>\n",
       "      <td>17620.000000</td>\n",
       "      <td>1976.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.509000e+03</td>\n",
       "      <td>483.000000</td>\n",
       "      <td>40.747804</td>\n",
       "      <td>-73.981923</td>\n",
       "      <td>482.000000</td>\n",
       "      <td>40.747659</td>\n",
       "      <td>-73.981923</td>\n",
       "      <td>19075.000000</td>\n",
       "      <td>1982.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3.876479e+06</td>\n",
       "      <td>3020.000000</td>\n",
       "      <td>40.771522</td>\n",
       "      <td>-73.950048</td>\n",
       "      <td>3020.000000</td>\n",
       "      <td>40.771522</td>\n",
       "      <td>-73.950048</td>\n",
       "      <td>20564.000000</td>\n",
       "      <td>1997.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30bd8e68-a8e6-4e2e-8d6c-9696f0e4b09a')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-30bd8e68-a8e6-4e2e-8d6c-9696f0e4b09a button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-30bd8e68-a8e6-4e2e-8d6c-9696f0e4b09a');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       tripduration  start station id  start station latitude  \\\n",
       "count  8.409100e+04      84091.000000            84091.000000   \n",
       "mean   2.240389e+03        449.589813               40.731815   \n",
       "std    1.948179e+04        359.983426                0.021619   \n",
       "min    6.100000e+01         72.000000               40.646607   \n",
       "25%    5.540000e+02        312.000000               40.716059   \n",
       "50%    9.580000e+02        404.000000               40.734011   \n",
       "75%    1.509000e+03        483.000000               40.747804   \n",
       "max    3.876479e+06       3020.000000               40.771522   \n",
       "\n",
       "       start station longitude  end station id  end station latitude  \\\n",
       "count             84091.000000    81248.000000          81248.000000   \n",
       "mean                -73.990975      451.956479             40.731570   \n",
       "std                   0.013123      368.024074              0.021642   \n",
       "min                 -74.017134       72.000000             40.646607   \n",
       "25%                 -74.001547      310.000000             40.716021   \n",
       "50%                 -73.990697      404.000000             40.733812   \n",
       "75%                 -73.981923      482.000000             40.747659   \n",
       "max                 -73.950048     3020.000000             40.771522   \n",
       "\n",
       "       end station longitude        bikeid    birth year        gender  \n",
       "count           81248.000000  84091.000000  43168.000000  84091.000000  \n",
       "mean              -73.990982  17604.454698   1973.738857      0.622124  \n",
       "std                 0.013242   1661.417010     10.937208      0.673987  \n",
       "min               -74.017134  14529.000000   1899.000000      0.000000  \n",
       "25%               -74.001547  16178.000000   1966.000000      0.000000  \n",
       "50%               -73.990741  17620.000000   1976.000000      1.000000  \n",
       "75%               -73.981923  19075.000000   1982.000000      1.000000  \n",
       "max               -73.950048  20564.000000   1997.000000      2.000000  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "3XcENpOUhgx4",
    "outputId": "158ebd03-c1ee-427d-9681-283b3548033b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "\n",
      "RangeIndex: 84091 entries, 0 to 84090\n",
      "\n",
      "Data columns (total 15 columns):\n",
      "\n",
      " #   Column                   Non-Null Count  Dtype  \n",
      "\n",
      "---  ------                   --------------  -----  \n",
      "\n",
      " 0   tripduration             84091 non-null  int64  \n",
      "\n",
      " 1   starttime                84091 non-null  object \n",
      "\n",
      " 2   stoptime                 84091 non-null  object \n",
      "\n",
      " 3   start station id         84091 non-null  float64\n",
      "\n",
      " 4   start station name       84091 non-null  object \n",
      "\n",
      " 5   start station latitude   84091 non-null  float64\n",
      "\n",
      " 6   start station longitude  84091 non-null  float64\n",
      "\n",
      " 7   end station id           81248 non-null  float64\n",
      "\n",
      " 8   end station name         81248 non-null  object \n",
      "\n",
      " 9   end station latitude     81248 non-null  float64\n",
      "\n",
      " 10  end station longitude    81248 non-null  float64\n",
      "\n",
      " 11  bikeid                   84091 non-null  float64\n",
      "\n",
      " 12  usertype                 84091 non-null  object \n",
      "\n",
      " 13  birth year               43168 non-null  float64\n",
      "\n",
      " 14  gender                   84091 non-null  float64\n",
      "\n",
      "dtypes: float64(9), int64(1), object(5)\n",
      "\n",
      "memory usage: 9.6+ MB\n"
     ]
    }
   ],
   "source": [
    "temp.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "VeJphFHLhulf"
   },
   "outputs": [],
   "source": [
    "temp[\"starttime\"] = pd.to_datetime(temp[\"starttime\"])\n",
    "temp[\"stoptime\"] = pd.to_datetime(temp[\"stoptime\"])\n",
    "temp.info()\n",
    "temp[\"Hour\"] = temp[\"stoptime\"].dt.hour - temp[\"starttime\"].dt.hour\n",
    "temp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "DdsHyr9dmjFR",
    "outputId": "29580cc2-32c5-4394-d5b6-7932d7908780"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(84091, 16)"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 496
    },
    "id": "UHDkWeZYnwS7",
    "outputId": "ffb74033-22ff-4dbc-c613-137f05c6d203"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-a96ec2e5-aae7-4fba-b261-6e712dbbac4c\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tripduration</th>\n",
       "      <th>starttime</th>\n",
       "      <th>stoptime</th>\n",
       "      <th>start station id</th>\n",
       "      <th>start station name</th>\n",
       "      <th>start station latitude</th>\n",
       "      <th>start station longitude</th>\n",
       "      <th>end station id</th>\n",
       "      <th>end station name</th>\n",
       "      <th>end station latitude</th>\n",
       "      <th>end station longitude</th>\n",
       "      <th>bikeid</th>\n",
       "      <th>usertype</th>\n",
       "      <th>birth year</th>\n",
       "      <th>gender</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>695</td>\n",
       "      <td>2013-06-01 00:00:01</td>\n",
       "      <td>2013-06-01 00:11:36</td>\n",
       "      <td>444.0</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>40.742354</td>\n",
       "      <td>-73.989151</td>\n",
       "      <td>434.0</td>\n",
       "      <td>9 Ave &amp; W 18 St</td>\n",
       "      <td>40.743174</td>\n",
       "      <td>-74.003664</td>\n",
       "      <td>19678.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1983.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>693</td>\n",
       "      <td>2013-06-01 00:00:08</td>\n",
       "      <td>2013-06-01 00:11:41</td>\n",
       "      <td>444.0</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>40.742354</td>\n",
       "      <td>-73.989151</td>\n",
       "      <td>434.0</td>\n",
       "      <td>9 Ave &amp; W 18 St</td>\n",
       "      <td>40.743174</td>\n",
       "      <td>-74.003664</td>\n",
       "      <td>16649.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1984.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2059</td>\n",
       "      <td>2013-06-01 00:00:44</td>\n",
       "      <td>2013-06-01 00:35:03</td>\n",
       "      <td>406.0</td>\n",
       "      <td>Hicks St &amp; Montague St</td>\n",
       "      <td>40.695128</td>\n",
       "      <td>-73.995951</td>\n",
       "      <td>406.0</td>\n",
       "      <td>Hicks St &amp; Montague St</td>\n",
       "      <td>40.695128</td>\n",
       "      <td>-73.995951</td>\n",
       "      <td>19599.0</td>\n",
       "      <td>Customer</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>123</td>\n",
       "      <td>2013-06-01 00:01:04</td>\n",
       "      <td>2013-06-01 00:03:07</td>\n",
       "      <td>475.0</td>\n",
       "      <td>E 15 St &amp; Irving Pl</td>\n",
       "      <td>40.735243</td>\n",
       "      <td>-73.987586</td>\n",
       "      <td>262.0</td>\n",
       "      <td>Washington Park</td>\n",
       "      <td>40.691782</td>\n",
       "      <td>-73.973730</td>\n",
       "      <td>16352.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1960.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>62.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1521</td>\n",
       "      <td>2013-06-01 00:01:22</td>\n",
       "      <td>2013-06-01 00:26:43</td>\n",
       "      <td>2008.0</td>\n",
       "      <td>Little West St &amp; 1 Pl</td>\n",
       "      <td>40.705693</td>\n",
       "      <td>-74.016777</td>\n",
       "      <td>310.0</td>\n",
       "      <td>State St &amp; Smith St</td>\n",
       "      <td>40.689269</td>\n",
       "      <td>-73.989129</td>\n",
       "      <td>15567.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1983.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a96ec2e5-aae7-4fba-b261-6e712dbbac4c')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-a96ec2e5-aae7-4fba-b261-6e712dbbac4c button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-a96ec2e5-aae7-4fba-b261-6e712dbbac4c');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "   tripduration           starttime            stoptime  start station id  \\\n",
       "0           695 2013-06-01 00:00:01 2013-06-01 00:11:36             444.0   \n",
       "1           693 2013-06-01 00:00:08 2013-06-01 00:11:41             444.0   \n",
       "2          2059 2013-06-01 00:00:44 2013-06-01 00:35:03             406.0   \n",
       "3           123 2013-06-01 00:01:04 2013-06-01 00:03:07             475.0   \n",
       "4          1521 2013-06-01 00:01:22 2013-06-01 00:26:43            2008.0   \n",
       "\n",
       "       start station name  start station latitude  start station longitude  \\\n",
       "0      Broadway & W 24 St               40.742354               -73.989151   \n",
       "1      Broadway & W 24 St               40.742354               -73.989151   \n",
       "2  Hicks St & Montague St               40.695128               -73.995951   \n",
       "3     E 15 St & Irving Pl               40.735243               -73.987586   \n",
       "4   Little West St & 1 Pl               40.705693               -74.016777   \n",
       "\n",
       "   end station id        end station name  end station latitude  \\\n",
       "0           434.0         9 Ave & W 18 St             40.743174   \n",
       "1           434.0         9 Ave & W 18 St             40.743174   \n",
       "2           406.0  Hicks St & Montague St             40.695128   \n",
       "3           262.0         Washington Park             40.691782   \n",
       "4           310.0     State St & Smith St             40.689269   \n",
       "\n",
       "   end station longitude   bikeid    usertype  birth year  gender  Hour   Age  \n",
       "0             -74.003664  19678.0  Subscriber      1983.0     1.0     0  39.0  \n",
       "1             -74.003664  16649.0  Subscriber      1984.0     1.0     0  38.0  \n",
       "2             -73.995951  19599.0    Customer         NaN     0.0     0   NaN  \n",
       "3             -73.973730  16352.0  Subscriber      1960.0     1.0     0  62.0  \n",
       "4             -73.989129  15567.0  Subscriber      1983.0     1.0     0  39.0  "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp['Age'] = 2022 - temp['birth year']\n",
    "temp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 496
    },
    "id": "roe7YgacoGFS",
    "outputId": "bb01e82c-c227-4d5f-e58e-b5237616d697"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-3ee2d15f-749c-415d-81dc-e303cfd21599\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tripduration</th>\n",
       "      <th>starttime</th>\n",
       "      <th>stoptime</th>\n",
       "      <th>start station id</th>\n",
       "      <th>start station name</th>\n",
       "      <th>start station latitude</th>\n",
       "      <th>start station longitude</th>\n",
       "      <th>end station id</th>\n",
       "      <th>end station name</th>\n",
       "      <th>end station latitude</th>\n",
       "      <th>end station longitude</th>\n",
       "      <th>bikeid</th>\n",
       "      <th>usertype</th>\n",
       "      <th>birth year</th>\n",
       "      <th>gender</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Age</th>\n",
       "      <th>Age_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>695</td>\n",
       "      <td>2013-06-01 00:00:01</td>\n",
       "      <td>2013-06-01 00:11:36</td>\n",
       "      <td>444.0</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>40.742354</td>\n",
       "      <td>-73.989151</td>\n",
       "      <td>434.0</td>\n",
       "      <td>9 Ave &amp; W 18 St</td>\n",
       "      <td>40.743174</td>\n",
       "      <td>-74.003664</td>\n",
       "      <td>19678.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1983.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>30-39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>693</td>\n",
       "      <td>2013-06-01 00:00:08</td>\n",
       "      <td>2013-06-01 00:11:41</td>\n",
       "      <td>444.0</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>40.742354</td>\n",
       "      <td>-73.989151</td>\n",
       "      <td>434.0</td>\n",
       "      <td>9 Ave &amp; W 18 St</td>\n",
       "      <td>40.743174</td>\n",
       "      <td>-74.003664</td>\n",
       "      <td>16649.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1984.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>30-39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2059</td>\n",
       "      <td>2013-06-01 00:00:44</td>\n",
       "      <td>2013-06-01 00:35:03</td>\n",
       "      <td>406.0</td>\n",
       "      <td>Hicks St &amp; Montague St</td>\n",
       "      <td>40.695128</td>\n",
       "      <td>-73.995951</td>\n",
       "      <td>406.0</td>\n",
       "      <td>Hicks St &amp; Montague St</td>\n",
       "      <td>40.695128</td>\n",
       "      <td>-73.995951</td>\n",
       "      <td>19599.0</td>\n",
       "      <td>Customer</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>123</td>\n",
       "      <td>2013-06-01 00:01:04</td>\n",
       "      <td>2013-06-01 00:03:07</td>\n",
       "      <td>475.0</td>\n",
       "      <td>E 15 St &amp; Irving Pl</td>\n",
       "      <td>40.735243</td>\n",
       "      <td>-73.987586</td>\n",
       "      <td>262.0</td>\n",
       "      <td>Washington Park</td>\n",
       "      <td>40.691782</td>\n",
       "      <td>-73.973730</td>\n",
       "      <td>16352.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1960.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>60+</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1521</td>\n",
       "      <td>2013-06-01 00:01:22</td>\n",
       "      <td>2013-06-01 00:26:43</td>\n",
       "      <td>2008.0</td>\n",
       "      <td>Little West St &amp; 1 Pl</td>\n",
       "      <td>40.705693</td>\n",
       "      <td>-74.016777</td>\n",
       "      <td>310.0</td>\n",
       "      <td>State St &amp; Smith St</td>\n",
       "      <td>40.689269</td>\n",
       "      <td>-73.989129</td>\n",
       "      <td>15567.0</td>\n",
       "      <td>Subscriber</td>\n",
       "      <td>1983.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>30-39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ee2d15f-749c-415d-81dc-e303cfd21599')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-3ee2d15f-749c-415d-81dc-e303cfd21599 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-3ee2d15f-749c-415d-81dc-e303cfd21599');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "   tripduration           starttime            stoptime  start station id  \\\n",
       "0           695 2013-06-01 00:00:01 2013-06-01 00:11:36             444.0   \n",
       "1           693 2013-06-01 00:00:08 2013-06-01 00:11:41             444.0   \n",
       "2          2059 2013-06-01 00:00:44 2013-06-01 00:35:03             406.0   \n",
       "3           123 2013-06-01 00:01:04 2013-06-01 00:03:07             475.0   \n",
       "4          1521 2013-06-01 00:01:22 2013-06-01 00:26:43            2008.0   \n",
       "\n",
       "       start station name  start station latitude  start station longitude  \\\n",
       "0      Broadway & W 24 St               40.742354               -73.989151   \n",
       "1      Broadway & W 24 St               40.742354               -73.989151   \n",
       "2  Hicks St & Montague St               40.695128               -73.995951   \n",
       "3     E 15 St & Irving Pl               40.735243               -73.987586   \n",
       "4   Little West St & 1 Pl               40.705693               -74.016777   \n",
       "\n",
       "   end station id        end station name  end station latitude  \\\n",
       "0           434.0         9 Ave & W 18 St             40.743174   \n",
       "1           434.0         9 Ave & W 18 St             40.743174   \n",
       "2           406.0  Hicks St & Montague St             40.695128   \n",
       "3           262.0         Washington Park             40.691782   \n",
       "4           310.0     State St & Smith St             40.689269   \n",
       "\n",
       "   end station longitude   bikeid    usertype  birth year  gender  Hour   Age  \\\n",
       "0             -74.003664  19678.0  Subscriber      1983.0     1.0     0  39.0   \n",
       "1             -74.003664  16649.0  Subscriber      1984.0     1.0     0  38.0   \n",
       "2             -73.995951  19599.0    Customer         NaN     0.0     0   NaN   \n",
       "3             -73.973730  16352.0  Subscriber      1960.0     1.0     0  62.0   \n",
       "4             -73.989129  15567.0  Subscriber      1983.0     1.0     0  39.0   \n",
       "\n",
       "  Age_group  \n",
       "0     30-39  \n",
       "1     30-39  \n",
       "2       NaN  \n",
       "3       60+  \n",
       "4     30-39  "
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Age_Groups = [\"<20\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60+\"]\n",
    "Age_Groups_Limits = [0, 20, 30, 40, 50, 60, np.inf]\n",
    "Age_Min = 0\n",
    "Age_Max = 100\n",
    "temp[\"Age_group\"] = pd.cut(temp[\"Age\"], Age_Groups_Limits, labels=Age_Groups)\n",
    "temp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "2v-TkfpbqLiN",
    "outputId": "79b73f0a-186d-4cd5-a2ad-df98b2e67b99"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-bb510201-d5ec-4460-ac39-4142dd6665d8\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>start station name</th>\n",
       "      <th>end station name</th>\n",
       "      <th>Number of Trips</th>\n",
       "      <th>Routes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8964</td>\n",
       "      <td>Central Park S &amp; 6 Ave</td>\n",
       "      <td>Central Park S &amp; 6 Ave</td>\n",
       "      <td>153</td>\n",
       "      <td>Central Park S &amp; 6 Ave to Central Park S &amp; 6 Ave</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7521</td>\n",
       "      <td>Broadway &amp; W 58 St</td>\n",
       "      <td>Broadway &amp; W 58 St</td>\n",
       "      <td>114</td>\n",
       "      <td>Broadway &amp; W 58 St to Broadway &amp; W 58 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37933</td>\n",
       "      <td>West Thames St</td>\n",
       "      <td>West Thames St</td>\n",
       "      <td>64</td>\n",
       "      <td>West Thames St to West Thames St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3990</td>\n",
       "      <td>Atlantic Ave &amp; Furman St</td>\n",
       "      <td>Old Fulton St</td>\n",
       "      <td>58</td>\n",
       "      <td>Atlantic Ave &amp; Furman St to Old Fulton St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>36141</td>\n",
       "      <td>W 56 St &amp; 6 Ave</td>\n",
       "      <td>W 56 St &amp; 6 Ave</td>\n",
       "      <td>57</td>\n",
       "      <td>W 56 St &amp; 6 Ave to W 56 St &amp; 6 Ave</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>7341</td>\n",
       "      <td>Broadway &amp; W 56 St</td>\n",
       "      <td>Broadway &amp; W 56 St</td>\n",
       "      <td>55</td>\n",
       "      <td>Broadway &amp; W 56 St to Broadway &amp; W 56 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>9101</td>\n",
       "      <td>Centre St &amp; Chambers St</td>\n",
       "      <td>Centre St &amp; Chambers St</td>\n",
       "      <td>48</td>\n",
       "      <td>Centre St &amp; Chambers St to Centre St &amp; Chamber...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>25989</td>\n",
       "      <td>Old Fulton St</td>\n",
       "      <td>Old Fulton St</td>\n",
       "      <td>48</td>\n",
       "      <td>Old Fulton St to Old Fulton St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>10855</td>\n",
       "      <td>Dean St &amp; 4 Ave</td>\n",
       "      <td>Dean St &amp; 4 Ave</td>\n",
       "      <td>46</td>\n",
       "      <td>Dean St &amp; 4 Ave to Dean St &amp; 4 Ave</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3945</td>\n",
       "      <td>Atlantic Ave &amp; Furman St</td>\n",
       "      <td>Atlantic Ave &amp; Furman St</td>\n",
       "      <td>46</td>\n",
       "      <td>Atlantic Ave &amp; Furman St to Atlantic Ave &amp; Fur...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>5161</td>\n",
       "      <td>Broadway &amp; Battery Pl</td>\n",
       "      <td>Broadway &amp; Battery Pl</td>\n",
       "      <td>43</td>\n",
       "      <td>Broadway &amp; Battery Pl to Broadway &amp; Battery Pl</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>20859</td>\n",
       "      <td>Greenwich St &amp; North Moore St</td>\n",
       "      <td>Greenwich St &amp; North Moore St</td>\n",
       "      <td>41</td>\n",
       "      <td>Greenwich St &amp; North Moore St to Greenwich St ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>7804</td>\n",
       "      <td>Bus Slip &amp; State St</td>\n",
       "      <td>Bus Slip &amp; State St</td>\n",
       "      <td>39</td>\n",
       "      <td>Bus Slip &amp; State St to Bus Slip &amp; State St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>25155</td>\n",
       "      <td>Metropolitan Ave &amp; Bedford Ave</td>\n",
       "      <td>Metropolitan Ave &amp; Bedford Ave</td>\n",
       "      <td>39</td>\n",
       "      <td>Metropolitan Ave &amp; Bedford Ave to Metropolitan...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>25928</td>\n",
       "      <td>Old Fulton St</td>\n",
       "      <td>Atlantic Ave &amp; Furman St</td>\n",
       "      <td>39</td>\n",
       "      <td>Old Fulton St to Atlantic Ave &amp; Furman St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>38258</td>\n",
       "      <td>Wythe Ave &amp; Metropolitan Ave</td>\n",
       "      <td>Wythe Ave &amp; Metropolitan Ave</td>\n",
       "      <td>36</td>\n",
       "      <td>Wythe Ave &amp; Metropolitan Ave to Wythe Ave &amp; Me...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>13086</td>\n",
       "      <td>E 17 St &amp; Broadway</td>\n",
       "      <td>E 17 St &amp; Broadway</td>\n",
       "      <td>35</td>\n",
       "      <td>E 17 St &amp; Broadway to E 17 St &amp; Broadway</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>4275</td>\n",
       "      <td>Bank St &amp; Washington St</td>\n",
       "      <td>Bank St &amp; Washington St</td>\n",
       "      <td>34</td>\n",
       "      <td>Bank St &amp; Washington St to Bank St &amp; Washingto...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>28075</td>\n",
       "      <td>South St &amp; Gouverneur Ln</td>\n",
       "      <td>South St &amp; Gouverneur Ln</td>\n",
       "      <td>33</td>\n",
       "      <td>South St &amp; Gouverneur Ln to South St &amp; Gouvern...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>4576</td>\n",
       "      <td>Barrow St &amp; Hudson St</td>\n",
       "      <td>Barrow St &amp; Hudson St</td>\n",
       "      <td>32</td>\n",
       "      <td>Barrow St &amp; Hudson St to Barrow St &amp; Hudson St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>9521</td>\n",
       "      <td>Christopher St &amp; Greenwich St</td>\n",
       "      <td>Christopher St &amp; Greenwich St</td>\n",
       "      <td>31</td>\n",
       "      <td>Christopher St &amp; Greenwich St to Christopher S...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>7518</td>\n",
       "      <td>Broadway &amp; W 58 St</td>\n",
       "      <td>Broadway &amp; W 51 St</td>\n",
       "      <td>31</td>\n",
       "      <td>Broadway &amp; W 58 St to Broadway &amp; W 51 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>37730</td>\n",
       "      <td>West St &amp; Chambers St</td>\n",
       "      <td>West St &amp; Chambers St</td>\n",
       "      <td>31</td>\n",
       "      <td>West St &amp; Chambers St to West St &amp; Chambers St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>15754</td>\n",
       "      <td>E 39 St &amp; 2 Ave</td>\n",
       "      <td>2 Ave &amp; E 31 St</td>\n",
       "      <td>30</td>\n",
       "      <td>E 39 St &amp; 2 Ave to 2 Ave &amp; E 31 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>30225</td>\n",
       "      <td>W 14 St &amp; The High Line</td>\n",
       "      <td>W 14 St &amp; The High Line</td>\n",
       "      <td>29</td>\n",
       "      <td>W 14 St &amp; The High Line to W 14 St &amp; The High ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>38065</td>\n",
       "      <td>William St &amp; Pine St</td>\n",
       "      <td>William St &amp; Pine St</td>\n",
       "      <td>29</td>\n",
       "      <td>William St &amp; Pine St to William St &amp; Pine St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1005</td>\n",
       "      <td>12 Ave &amp; W 40 St</td>\n",
       "      <td>12 Ave &amp; W 40 St</td>\n",
       "      <td>29</td>\n",
       "      <td>12 Ave &amp; W 40 St to 12 Ave &amp; W 40 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>8959</td>\n",
       "      <td>Central Park S &amp; 6 Ave</td>\n",
       "      <td>Broadway &amp; W 58 St</td>\n",
       "      <td>29</td>\n",
       "      <td>Central Park S &amp; 6 Ave to Broadway &amp; W 58 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>19612</td>\n",
       "      <td>Front St &amp; Washington St</td>\n",
       "      <td>Front St &amp; Washington St</td>\n",
       "      <td>28</td>\n",
       "      <td>Front St &amp; Washington St to Front St &amp; Washing...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>5885</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>E 17 St &amp; Broadway</td>\n",
       "      <td>28</td>\n",
       "      <td>Broadway &amp; W 24 St to E 17 St &amp; Broadway</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>31107</td>\n",
       "      <td>W 20 St &amp; 11 Ave</td>\n",
       "      <td>W 20 St &amp; 11 Ave</td>\n",
       "      <td>28</td>\n",
       "      <td>W 20 St &amp; 11 Ave to W 20 St &amp; 11 Ave</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>4115</td>\n",
       "      <td>Bank St &amp; Hudson St</td>\n",
       "      <td>Bank St &amp; Hudson St</td>\n",
       "      <td>27</td>\n",
       "      <td>Bank St &amp; Hudson St to Bank St &amp; Hudson St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>21265</td>\n",
       "      <td>Greenwich St &amp; Warren St</td>\n",
       "      <td>West Thames St</td>\n",
       "      <td>27</td>\n",
       "      <td>Greenwich St &amp; Warren St to West Thames St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>5305</td>\n",
       "      <td>Broadway &amp; Berry St</td>\n",
       "      <td>Broadway &amp; Berry St</td>\n",
       "      <td>26</td>\n",
       "      <td>Broadway &amp; Berry St to Broadway &amp; Berry St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>5398</td>\n",
       "      <td>Broadway &amp; E 14 St</td>\n",
       "      <td>Broadway &amp; E 14 St</td>\n",
       "      <td>26</td>\n",
       "      <td>Broadway &amp; E 14 St to Broadway &amp; E 14 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>18105</td>\n",
       "      <td>E 58 St &amp; 3 Ave</td>\n",
       "      <td>E 58 St &amp; 3 Ave</td>\n",
       "      <td>26</td>\n",
       "      <td>E 58 St &amp; 3 Ave to E 58 St &amp; 3 Ave</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>7342</td>\n",
       "      <td>Broadway &amp; W 56 St</td>\n",
       "      <td>Broadway &amp; W 58 St</td>\n",
       "      <td>25</td>\n",
       "      <td>Broadway &amp; W 56 St to Broadway &amp; W 58 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>7013</td>\n",
       "      <td>Broadway &amp; W 51 St</td>\n",
       "      <td>Broadway &amp; W 51 St</td>\n",
       "      <td>25</td>\n",
       "      <td>Broadway &amp; W 51 St to Broadway &amp; W 51 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>753</td>\n",
       "      <td>11 Ave &amp; W 41 St</td>\n",
       "      <td>11 Ave &amp; W 41 St</td>\n",
       "      <td>25</td>\n",
       "      <td>11 Ave &amp; W 41 St to 11 Ave &amp; W 41 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>22335</td>\n",
       "      <td>John St &amp; William St</td>\n",
       "      <td>John St &amp; William St</td>\n",
       "      <td>25</td>\n",
       "      <td>John St &amp; William St to John St &amp; William St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>10427</td>\n",
       "      <td>Clinton St &amp; Joralemon St</td>\n",
       "      <td>Clinton St &amp; Joralemon St</td>\n",
       "      <td>25</td>\n",
       "      <td>Clinton St &amp; Joralemon St to Clinton St &amp; Jora...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>37589</td>\n",
       "      <td>West St &amp; Chambers St</td>\n",
       "      <td>Bus Slip &amp; State St</td>\n",
       "      <td>24</td>\n",
       "      <td>West St &amp; Chambers St to Bus Slip &amp; State St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>868</td>\n",
       "      <td>11 Ave &amp; W 59 St</td>\n",
       "      <td>11 Ave &amp; W 59 St</td>\n",
       "      <td>24</td>\n",
       "      <td>11 Ave &amp; W 59 St to 11 Ave &amp; W 59 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>29584</td>\n",
       "      <td>Vesey Pl &amp; River Terrace</td>\n",
       "      <td>Vesey Pl &amp; River Terrace</td>\n",
       "      <td>24</td>\n",
       "      <td>Vesey Pl &amp; River Terrace to Vesey Pl &amp; River T...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>5841</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>Broadway &amp; W 24 St</td>\n",
       "      <td>24</td>\n",
       "      <td>Broadway &amp; W 24 St to Broadway &amp; W 24 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>34286</td>\n",
       "      <td>W 43 St &amp; 10 Ave</td>\n",
       "      <td>W 43 St &amp; 10 Ave</td>\n",
       "      <td>23</td>\n",
       "      <td>W 43 St &amp; 10 Ave to W 43 St &amp; 10 Ave</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>2527</td>\n",
       "      <td>9 Ave &amp; W 14 St</td>\n",
       "      <td>9 Ave &amp; W 14 St</td>\n",
       "      <td>23</td>\n",
       "      <td>9 Ave &amp; W 14 St to 9 Ave &amp; W 14 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>1138</td>\n",
       "      <td>12 Ave &amp; W 40 St</td>\n",
       "      <td>West St &amp; Chambers St</td>\n",
       "      <td>23</td>\n",
       "      <td>12 Ave &amp; W 40 St to West St &amp; Chambers St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>1146</td>\n",
       "      <td>2 Ave &amp; E 31 St</td>\n",
       "      <td>2 Ave &amp; E 31 St</td>\n",
       "      <td>23</td>\n",
       "      <td>2 Ave &amp; E 31 St to 2 Ave &amp; E 31 St</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>25513</td>\n",
       "      <td>Murray St &amp; West St</td>\n",
       "      <td>Murray St &amp; West St</td>\n",
       "      <td>23</td>\n",
       "      <td>Murray St &amp; West St to Murray St &amp; West St</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb510201-d5ec-4460-ac39-4142dd6665d8')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-bb510201-d5ec-4460-ac39-4142dd6665d8 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-bb510201-d5ec-4460-ac39-4142dd6665d8');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "    index              start station name                end station name  \\\n",
       "0    8964          Central Park S & 6 Ave          Central Park S & 6 Ave   \n",
       "1    7521              Broadway & W 58 St              Broadway & W 58 St   \n",
       "2   37933                  West Thames St                  West Thames St   \n",
       "3    3990        Atlantic Ave & Furman St                   Old Fulton St   \n",
       "4   36141                 W 56 St & 6 Ave                 W 56 St & 6 Ave   \n",
       "5    7341              Broadway & W 56 St              Broadway & W 56 St   \n",
       "6    9101         Centre St & Chambers St         Centre St & Chambers St   \n",
       "7   25989                   Old Fulton St                   Old Fulton St   \n",
       "8   10855                 Dean St & 4 Ave                 Dean St & 4 Ave   \n",
       "9    3945        Atlantic Ave & Furman St        Atlantic Ave & Furman St   \n",
       "10   5161           Broadway & Battery Pl           Broadway & Battery Pl   \n",
       "11  20859   Greenwich St & North Moore St   Greenwich St & North Moore St   \n",
       "12   7804             Bus Slip & State St             Bus Slip & State St   \n",
       "13  25155  Metropolitan Ave & Bedford Ave  Metropolitan Ave & Bedford Ave   \n",
       "14  25928                   Old Fulton St        Atlantic Ave & Furman St   \n",
       "15  38258    Wythe Ave & Metropolitan Ave    Wythe Ave & Metropolitan Ave   \n",
       "16  13086              E 17 St & Broadway              E 17 St & Broadway   \n",
       "17   4275         Bank St & Washington St         Bank St & Washington St   \n",
       "18  28075        South St & Gouverneur Ln        South St & Gouverneur Ln   \n",
       "19   4576           Barrow St & Hudson St           Barrow St & Hudson St   \n",
       "20   9521   Christopher St & Greenwich St   Christopher St & Greenwich St   \n",
       "21   7518              Broadway & W 58 St              Broadway & W 51 St   \n",
       "22  37730           West St & Chambers St           West St & Chambers St   \n",
       "23  15754                 E 39 St & 2 Ave                 2 Ave & E 31 St   \n",
       "24  30225         W 14 St & The High Line         W 14 St & The High Line   \n",
       "25  38065            William St & Pine St            William St & Pine St   \n",
       "26   1005                12 Ave & W 40 St                12 Ave & W 40 St   \n",
       "27   8959          Central Park S & 6 Ave              Broadway & W 58 St   \n",
       "28  19612        Front St & Washington St        Front St & Washington St   \n",
       "29   5885              Broadway & W 24 St              E 17 St & Broadway   \n",
       "30  31107                W 20 St & 11 Ave                W 20 St & 11 Ave   \n",
       "31   4115             Bank St & Hudson St             Bank St & Hudson St   \n",
       "32  21265        Greenwich St & Warren St                  West Thames St   \n",
       "33   5305             Broadway & Berry St             Broadway & Berry St   \n",
       "34   5398              Broadway & E 14 St              Broadway & E 14 St   \n",
       "35  18105                 E 58 St & 3 Ave                 E 58 St & 3 Ave   \n",
       "36   7342              Broadway & W 56 St              Broadway & W 58 St   \n",
       "37   7013              Broadway & W 51 St              Broadway & W 51 St   \n",
       "38    753                11 Ave & W 41 St                11 Ave & W 41 St   \n",
       "39  22335            John St & William St            John St & William St   \n",
       "40  10427       Clinton St & Joralemon St       Clinton St & Joralemon St   \n",
       "41  37589           West St & Chambers St             Bus Slip & State St   \n",
       "42    868                11 Ave & W 59 St                11 Ave & W 59 St   \n",
       "43  29584        Vesey Pl & River Terrace        Vesey Pl & River Terrace   \n",
       "44   5841              Broadway & W 24 St              Broadway & W 24 St   \n",
       "45  34286                W 43 St & 10 Ave                W 43 St & 10 Ave   \n",
       "46   2527                 9 Ave & W 14 St                 9 Ave & W 14 St   \n",
       "47   1138                12 Ave & W 40 St           West St & Chambers St   \n",
       "48   1146                 2 Ave & E 31 St                 2 Ave & E 31 St   \n",
       "49  25513             Murray St & West St             Murray St & West St   \n",
       "\n",
       "    Number of Trips                                             Routes  \n",
       "0               153   Central Park S & 6 Ave to Central Park S & 6 Ave  \n",
       "1               114           Broadway & W 58 St to Broadway & W 58 St  \n",
       "2                64                   West Thames St to West Thames St  \n",
       "3                58          Atlantic Ave & Furman St to Old Fulton St  \n",
       "4                57                 W 56 St & 6 Ave to W 56 St & 6 Ave  \n",
       "5                55           Broadway & W 56 St to Broadway & W 56 St  \n",
       "6                48  Centre St & Chambers St to Centre St & Chamber...  \n",
       "7                48                     Old Fulton St to Old Fulton St  \n",
       "8                46                 Dean St & 4 Ave to Dean St & 4 Ave  \n",
       "9                46  Atlantic Ave & Furman St to Atlantic Ave & Fur...  \n",
       "10               43     Broadway & Battery Pl to Broadway & Battery Pl  \n",
       "11               41  Greenwich St & North Moore St to Greenwich St ...  \n",
       "12               39         Bus Slip & State St to Bus Slip & State St  \n",
       "13               39  Metropolitan Ave & Bedford Ave to Metropolitan...  \n",
       "14               39          Old Fulton St to Atlantic Ave & Furman St  \n",
       "15               36  Wythe Ave & Metropolitan Ave to Wythe Ave & Me...  \n",
       "16               35           E 17 St & Broadway to E 17 St & Broadway  \n",
       "17               34  Bank St & Washington St to Bank St & Washingto...  \n",
       "18               33  South St & Gouverneur Ln to South St & Gouvern...  \n",
       "19               32     Barrow St & Hudson St to Barrow St & Hudson St  \n",
       "20               31  Christopher St & Greenwich St to Christopher S...  \n",
       "21               31           Broadway & W 58 St to Broadway & W 51 St  \n",
       "22               31     West St & Chambers St to West St & Chambers St  \n",
       "23               30                 E 39 St & 2 Ave to 2 Ave & E 31 St  \n",
       "24               29  W 14 St & The High Line to W 14 St & The High ...  \n",
       "25               29       William St & Pine St to William St & Pine St  \n",
       "26               29               12 Ave & W 40 St to 12 Ave & W 40 St  \n",
       "27               29       Central Park S & 6 Ave to Broadway & W 58 St  \n",
       "28               28  Front St & Washington St to Front St & Washing...  \n",
       "29               28           Broadway & W 24 St to E 17 St & Broadway  \n",
       "30               28               W 20 St & 11 Ave to W 20 St & 11 Ave  \n",
       "31               27         Bank St & Hudson St to Bank St & Hudson St  \n",
       "32               27         Greenwich St & Warren St to West Thames St  \n",
       "33               26         Broadway & Berry St to Broadway & Berry St  \n",
       "34               26           Broadway & E 14 St to Broadway & E 14 St  \n",
       "35               26                 E 58 St & 3 Ave to E 58 St & 3 Ave  \n",
       "36               25           Broadway & W 56 St to Broadway & W 58 St  \n",
       "37               25           Broadway & W 51 St to Broadway & W 51 St  \n",
       "38               25               11 Ave & W 41 St to 11 Ave & W 41 St  \n",
       "39               25       John St & William St to John St & William St  \n",
       "40               25  Clinton St & Joralemon St to Clinton St & Jora...  \n",
       "41               24       West St & Chambers St to Bus Slip & State St  \n",
       "42               24               11 Ave & W 59 St to 11 Ave & W 59 St  \n",
       "43               24  Vesey Pl & River Terrace to Vesey Pl & River T...  \n",
       "44               24           Broadway & W 24 St to Broadway & W 24 St  \n",
       "45               23               W 43 St & 10 Ave to W 43 St & 10 Ave  \n",
       "46               23                 9 Ave & W 14 St to 9 Ave & W 14 St  \n",
       "47               23          12 Ave & W 40 St to West St & Chambers St  \n",
       "48               23                 2 Ave & E 31 St to 2 Ave & E 31 St  \n",
       "49               23         Murray St & West St to Murray St & West St  "
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trips_df = pd.DataFrame()\n",
    "trips_df = temp.groupby(['start station name','end station name']).size().reset_index(name = 'Number of Trips')\n",
    "trips_df = trips_df.sort_values('Number of Trips',ascending = False)\n",
    "trips_df[\"start station name\"] = trips_df[\"start station name\"].astype(str)\n",
    "trips_df[\"end station name\"] = trips_df[\"end station name\"].astype(str)\n",
    "trips_df[\"Routes\"] = trips_df[\"start station name\"] + \" to \" + trips_df[\"end station name\"]\n",
    "trips_df = trips_df[:50]\n",
    "trips_df = trips_df.reset_index()\n",
    "trips_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 542
    },
    "id": "1sdGQFJioTIE",
    "outputId": "b958d04d-3348-4a2d-ab99-d164c4c8fa7d"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<html>\n",
       "<head><meta charset=\"utf-8\" /></head>\n",
       "<body>\n",
       "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
       "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"4498635f-665b-423f-947e-9fa53638f7b7\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"4498635f-665b-423f-947e-9fa53638f7b7\")) {                    Plotly.newPlot(                        \"4498635f-665b-423f-947e-9fa53638f7b7\",                        [{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"label=%{label}<br>value=%{value}<extra></extra>\",\"labels\":[0.0,1.0,2.0],\"legendgroup\":\"\",\"name\":\"\",\"showlegend\":true,\"values\":[40991,33885,9215],\"type\":\"pie\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Gender Variation\"}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('4498635f-665b-423f-947e-9fa53638f7b7');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                            </script>        </div>\n",
       "</body>\n",
       "</html>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "px.pie(values = temp['gender'].value_counts(),\n",
    "       names =temp['gender'].value_counts().index,\n",
    "       title =\"Gender Variation\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 542
    },
    "id": "_L-PeXXzouWo",
    "outputId": "6cc5034e-df74-47fc-f71f-0a2e33223b93"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<html>\n",
       "<head><meta charset=\"utf-8\" /></head>\n",
       "<body>\n",
       "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
       "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"08a7864a-f9e9-4e73-883d-a71f72736c22\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"08a7864a-f9e9-4e73-883d-a71f72736c22\")) {                    Plotly.newPlot(                        \"08a7864a-f9e9-4e73-883d-a71f72736c22\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Start Station Name=%{x}<br>Count=%{y}<extra></extra>\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"textposition\":\"auto\",\"x\":[\"E 17 St & Broadway\",\"W 20 St & 11 Ave\",\"Broadway & W 58 St\",\"Broadway & E 14 St\",\"Broadway & W 24 St\",\"West Thames St\",\"8 Ave & W 31 St N\",\"Christopher St & Greenwich St\",\"Lafayette St & E 8 St\",\"Broadway & E 22 St\",\"West St & Chambers St\",\"Broadway & W 56 St\",\"Central Park S & 6 Ave\",\"Carmine St & 6 Ave\",\"9 Ave & W 14 St\",\"9 Ave & W 22 St\",\"W 41 St & 8 Ave\",\"Bank St & Washington St\",\"Barrow St & Hudson St\",\"E 58 St & 3 Ave\",\"Cleveland Pl & Spring St\",\"Franklin St & W Broadway\",\"Greenwich St & North Moore St\",\"E 39 St & 2 Ave\",\"W 56 St & 6 Ave\",\"E 7 St & Avenue A\",\"E 24 St & Park Ave S\",\"W 14 St & The High Line\",\"E 4 St & 2 Ave\",\"Broadway & Battery Pl\",\"W 49 St & 8 Ave\",\"W 33 St & 7 Ave\",\"2 Ave & E 31 St\",\"Lawrence St & Willoughby St\",\"Broadway & W 51 St\",\"9 Ave & W 16 St\",\"Broadway & W 53 St\",\"W 18 St & 6 Ave\",\"Bus Slip & State St\",\"E 11 St & 1 Ave\",\"W 20 St & 8 Ave\",\"2 Ave & E 58 St\",\"Mott St & Prince St\",\"12 Ave & W 40 St\",\"W 15 St & 7 Ave\",\"W 37 St & 5 Ave\",\"W Broadway & Spring St\",\"Pershing Square North\",\"Centre St & Chambers St\",\"Bank St & Hudson St\",\"E 2 St & Avenue C\",\"W 4 St & 7 Ave S\",\"W 38 St & 8 Ave\",\"Greenwich St & Warren St\",\"Broadway & W 41 St\",\"W 43 St & 10 Ave\",\"Pershing Square South\",\"W 13 St & 6 Ave\",\"Murray St & West St\",\"E 31 St & 3 Ave\",\"E 51 St & Lexington Ave\",\"Mercer St & Bleecker St S\",\"W 27 St & 7 Ave\",\"E 19 St & 3 Ave\",\"E 15 St & Irving Pl\",\"W 25 St & 6 Ave\",\"Broadway & W 29 St\",\"Greenwich St & W Houston St\",\"Dekalb Ave & Hudson Ave\",\"St Marks Pl & 1 Ave\",\"E 20 St & 2 Ave\",\"Centre St & Worth St\",\"W 21 St & 6 Ave\",\"Hicks St & Montague St\",\"Great Jones St\",\"Mercer St & Spring St\",\"Old Fulton St\",\"W 22 St & 10 Ave\",\"11 Ave & W 59 St\",\"W 24 St & 7 Ave\",\"South St & Gouverneur Ln\",\"W 39 St & 9 Ave\",\"6 Ave & Canal St\",\"Howard St & Centre St\",\"Rivington St & Chrystie St\",\"Washington Pl & 6 Ave\",\"Barclay St & Church St\",\"E 11 St & 2 Ave\",\"E 43 St & Vanderbilt Ave\",\"E 32 St & Park Ave\",\"W 20 St & 7 Ave\",\"Cadman Plaza West & Montague St\",\"Pearl St & Hanover Square\",\"E 2 St & Avenue B\",\"W 17 St & 8 Ave\",\"W 45 St & 6 Ave (1)\",\"Sullivan St & Washington Sq\",\"William St & Pine St\",\"E 12 St & 3 Ave\",\"University Pl & E 14 St\",\"E 27 St & 1 Ave\",\"Allen St & Stanton St\",\"E 14 St & Avenue B\",\"Greenwich Ave & Charles St\",\"W 52 St & 11 Ave\",\"Metropolitan Ave & Bedford Ave\",\"John St & William St\",\"E 16 St & 5 Ave\",\"W 29 St & 9 Ave\",\"E 23 St & 1 Ave\",\"E 20 St & Fdr Drive\",\"Lexington Ave & E 29 St\",\"W 16 St & The High Line\",\"Clinton St & Grand St\",\"Broadway & W 32 St\",\"W 51 St & 6 Ave\",\"Washington Pl & Broadway\",\"Watts St & Greenwich St\",\"St Marks Pl & 2 Ave\",\"Front St & Washington St\",\"W 22 St & 8 Ave\",\"E 53 St & Madison Ave\",\"1 Ave & E 44 St\",\"Water - Whitehall Plaza\",\"W 52 St & 5 Ave\",\"E 53 St & Lexington Ave\",\"W 59 St & 10 Ave\",\"Lexington Ave & E 24 St\",\"E 10 St & Avenue A\",\"Warren St & Church St\",\"Washington Square E\",\"Bayard St & Baxter St\",\"E 25 St & 2 Ave\",\"W 54 St & 9 Ave\",\"Fulton St & Broadway\",\"6 Ave & Broome St\",\"Broadway & W 38 St\",\"Fdr Drive & E 35 St\",\"Canal St & Rutgers St\",\"W 13 St & 7 Ave\",\"W 47 St & 10 Ave\",\"1 Ave & E 16 St\",\"8 Ave & W 52 St\",\"1 Ave & E 18 St\",\"Washington St & Gansevoort St\",\"1 Ave & E 30 St\",\"W 52 St & 9 Ave\",\"Hudson St & Reade St\",\"11 Ave & W 41 St\",\"E 47 St & Park Ave\",\"E 9 St & Avenue C\",\"E 13 St & Avenue A\",\"Duane St & Greenwich St\",\"W 37 St & 10 Ave\",\"Macdougal St & Washington Sq\",\"S 5 Pl & S 5 St\",\"Henry St & Grand St\",\"E 3 St & 1 Ave\",\"Laguardia Pl & W 3 St\",\"Reade St & Broadway\",\"Cumberland St & Lafayette Ave\",\"W 42 St & 8 Ave\",\"Allen St & Rivington St\",\"Dean St & 4 Ave\",\"Suffolk St & Stanton St\",\"Atlantic Ave & Furman St\",\"Pearl St & Anchorage Pl\",\"W 11 St & 6 Ave\",\"E 10 St & 5 Ave\",\"E 11 St & Broadway\",\"Perry St & Bleecker St\",\"Lafayette St & Jersey St N\",\"5 Ave & E 29 St\",\"11 Ave & W 27 St\",\"E 51 St & 1 Ave\",\"Jay St & Tech Pl\",\"W 56 St & 10 Ave\",\"E 33 St & 2 Ave\",\"W 26 St & 8 Ave\",\"Old Slip & Front St\",\"E 39 St & 3 Ave\",\"Forsyth St & Canal St\",\"Leonard St & Church St\",\"E 47 St & 2 Ave\",\"Allen St & Hester St\",\"Macdougal St & Prince St\",\"South St & Whitehall St\",\"State St & Smith St\",\"6 Ave & W 33 St\",\"E 6 St & Avenue B\",\"Broadway & W 36 St\",\"Ashland Pl & Hanson Pl\",\"Cadman Plaza W & Pierrepont St\",\"E 48 St & Madison Ave\",\"E 5 St & Avenue C\",\"Vesey Pl & River Terrace\",\"Atlantic Ave & Fort Greene Pl\",\"E 33 St & 5 Ave\",\"Spruce St & Nassau St\",\"Norfolk St & Broome St\",\"10 Ave & W 28 St\",\"Cliff St & Fulton St\",\"E 30 St & Park Ave S\",\"Forsyth St & Broome St\",\"Little West St & 1 Pl\",\"York St & Jay St\",\"Clinton St & Joralemon St\",\"E 45 St & 3 Ave\",\"E 60 St & York Ave\",\"E 56 St & 3 Ave\",\"Broadway & W 37 St\",\"Stanton St & Chrystie St\",\"9 Ave & W 45 St\",\"8 Ave & W 33 St\",\"Maiden Ln & Pearl St\",\"9 Ave & W 18 St\",\"Liberty St & Broadway\",\"Rivington St & Ridge St\",\"S 3 St & Bedford Ave\",\"Henry St & Atlantic Ave\",\"W 53 St & 10 Ave\",\"W 46 St & 11 Ave\",\"Catherine St & Monroe St\",\"Front St & Maiden Ln\",\"Clinton Ave & Myrtle Ave\",\"Clinton St & Tillary St\",\"Cherry St\",\"Wythe Ave & Metropolitan Ave\",\"Fulton St & William St\",\"Clark St & Henry St\",\"W 44 St & 5 Ave\",\"Division St & Bowery\",\"Fulton St & Washington Ave\",\"Bond St & Schermerhorn St\",\"Harrison St & Hudson St\",\"Bialystoker Pl & Delancey St\",\"Lispenard St & Broadway\",\"Broadway & Berry St\",\"W 43 St & 6 Ave\",\"E 47 St & 1 Ave\",\"W 13 St & 5 Ave\",\"E 52 St & 2 Ave\",\"St James Pl & Oliver St\",\"E 55 St & Lexington Ave\",\"Pike St & E Broadway\",\"Fulton St & Rockwell Pl\",\"E 20 St & Park Ave\",\"Lafayette Ave & Fort Greene Pl\",\"South End Ave & Liberty St\",\"E 25 St & 1 Ave\",\"Grand St & Havemeyer St\",\"Johnson St & Gold St\",\"Cadman Plaza E & Red Cross Pl\",\"W 31 St & 7 Ave\",\"Grand St & Greene St\",\"E 2 St & 2 Ave\",\"Cadman Plaza E & Tillary St\",\"Broadway & W 60 St\",\"Broad St & Bridge St\",\"Fulton St & Grand Ave\",\"W 34 St & 11 Ave\",\"Macon St & Nostrand Ave\",\"S 4 St & Wythe Ave\",\"Lafayette Ave & Classon Ave\",\"Adelphi St & Myrtle Ave\",\"Dekalb Ave & S Portland Ave\",\"Columbia St & Rivington St\",\"Market St & Cherry St\",\"Carlton Ave & Park Ave\",\"Nycbs Depot - Far\",\"Willoughby Ave & Hall St\",\"Front St & Gold St\",\"Grand Army Plaza & Central Park S\",\"Columbia Heights & Cranberry St\",\"Lefferts Pl & Franklin Ave\",\"W 45 St & 8 Ave\",\"Stanton St & Mangin St\",\"Clermont Ave & Lafayette Ave\",\"St James Pl & Pearl St\",\"Washington Ave & Park Ave\",\"Peck Slip & Front St\",\"Willoughby Ave & Walworth St\",\"Madison St & Montgomery St\",\"Carlton Ave & Flushing Ave\",\"Shevchenko Pl & E 7 St\",\"Lexington Ave & Classon Ave\",\"Henry St & Poplar St\",\"Washington Park\",\"W 26 St & 10 Ave\",\"E 6 St & Avenue D\",\"Madison St & Clinton St\",\"Emerson Pl & Myrtle Ave\",\"Kent Ave & S 11 St\",\"Willoughby St & Fleet St\",\"Nycbs Depot - Del\",\"Washington Ave & Greene Ave\",\"E 56 St & Madison Ave\",\"Duffield St & Willoughby St\",\"Greenwich Ave & 8 Ave\",\"Laight St & Hudson St\",\"S Portland Ave & Hanson Pl\",\"Pitt St & Stanton St\",\"E 15 St & 3 Ave\",\"Railroad Ave & Kay Ave\",\"Concord St & Bridge St\",\"Avenue D & E 8 St\",\"Lafayette Ave & St James Pl\",\"Monroe St & Bedford Ave\",\"Fulton St & Clermont Ave\",\"Broadway & W 49 St\",\"Myrtle Ave & St Edwards St\",\"Dekalb Ave & Vanderbilt Ave\",\"Pike St & Monroe St\",\"Nassau St & Navy St\",\"Clermont Ave & Park Ave\",\"Bedford Ave & S 9 St\",\"Hancock St & Bedford Ave\",\"Avenue D & E 3 St\",\"Nycbs Depot - Ssp\",\"Franklin Ave & Myrtle Ave\",\"Clinton Ave & Flushing Ave\",\"3969.temp (bike The Branches - Central Branch)\",\"E 55 St & 2 Ave\",\"Avenue D & E 12 St\",\"3 Ave & Schermerhorn St\",\"Nycbs Test\",\"Monroe St & Classon Ave\",\"Sands St & Navy St\",\"Gallatin Pl & Livingston St\",\"Park Ave & St Edwards St\",\"Hanover Pl & Livingston St\",\"E 48 St & 3 Ave\",\"Elizabeth St & Hester St\",\"Mlswkiosk\",\"E 40 St & 5 Ave\"],\"xaxis\":\"x\",\"y\":[919,860,834,833,769,688,661,655,616,606,603,600,586,581,566,548,535,522,516,512,497,468,466,465,454,451,450,441,440,439,437,437,428,427,424,423,417,417,416,415,409,409,407,406,404,400,400,398,398,396,396,395,394,391,389,388,387,384,377,376,374,374,373,373,373,370,367,365,364,363,357,356,355,353,351,349,349,346,343,341,340,338,338,336,336,334,333,332,330,327,327,327,326,325,323,323,321,320,314,314,312,312,311,311,308,307,306,305,304,303,302,302,299,298,298,295,293,293,292,292,292,292,290,287,287,286,285,285,284,283,281,281,280,278,278,278,276,276,274,274,273,271,269,268,267,267,266,266,262,260,260,260,259,259,256,255,254,253,252,250,248,247,246,245,245,244,244,243,243,242,242,241,241,238,237,236,236,235,234,234,233,229,229,229,228,227,227,226,219,217,217,217,216,214,214,213,213,212,212,206,205,203,200,196,193,192,190,188,187,186,185,184,183,183,181,178,176,176,173,172,171,171,170,169,165,161,160,159,159,159,157,157,156,156,156,154,150,149,149,148,148,148,143,140,139,139,137,136,134,130,129,129,128,128,127,126,125,124,122,122,121,114,114,108,107,107,106,102,101,101,101,100,99,96,93,93,92,92,91,90,89,89,85,81,80,80,80,79,77,76,76,75,75,74,73,71,70,69,68,64,63,62,60,59,58,56,54,53,52,51,50,49,49,47,46,44,44,39,38,37,37,36,36,33,33,32,31,30,22,18,16,6,5,2,1],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Start Station Name\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Count\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('08a7864a-f9e9-4e73-883d-a71f72736c22');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                            </script>        </div>\n",
       "</body>\n",
       "</html>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "px.bar(x=temp[\"start station name\"].value_counts().index,\n",
    "       y=temp[\"start station name\"].value_counts().values,\n",
    "       labels={'x':'Start Station Name',\"y\":\"Count\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 542
    },
    "id": "da-5uSWwo7JG",
    "outputId": "b68dc738-2f11-4484-9169-f02192cad041"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<html>\n",
       "<head><meta charset=\"utf-8\" /></head>\n",
       "<body>\n",
       "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
       "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"11792d7d-0e82-43d0-acc0-6a2aaa8b6c1b\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"11792d7d-0e82-43d0-acc0-6a2aaa8b6c1b\")) {                    Plotly.newPlot(                        \"11792d7d-0e82-43d0-acc0-6a2aaa8b6c1b\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"End Station Name=%{x}<br>Count=%{y}<extra></extra>\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"textposition\":\"auto\",\"x\":[\"E 17 St & Broadway\",\"Broadway & W 58 St\",\"W 20 St & 11 Ave\",\"Broadway & E 14 St\",\"Broadway & W 24 St\",\"West Thames St\",\"Central Park S & 6 Ave\",\"8 Ave & W 31 St N\",\"West St & Chambers St\",\"Christopher St & Greenwich St\",\"Broadway & E 22 St\",\"9 Ave & W 14 St\",\"Carmine St & 6 Ave\",\"Lafayette St & E 8 St\",\"Broadway & W 56 St\",\"Cleveland Pl & Spring St\",\"E 58 St & 3 Ave\",\"Bank St & Washington St\",\"9 Ave & W 22 St\",\"W 41 St & 8 Ave\",\"Franklin St & W Broadway\",\"Barrow St & Hudson St\",\"W 14 St & The High Line\",\"W 56 St & 6 Ave\",\"Greenwich St & North Moore St\",\"2 Ave & E 58 St\",\"E 39 St & 2 Ave\",\"E 7 St & Avenue A\",\"W 33 St & 7 Ave\",\"Bus Slip & State St\",\"Broadway & Battery Pl\",\"E 24 St & Park Ave S\",\"9 Ave & W 16 St\",\"W Broadway & Spring St\",\"Mott St & Prince St\",\"W 4 St & 7 Ave S\",\"2 Ave & E 31 St\",\"12 Ave & W 40 St\",\"E 11 St & 1 Ave\",\"Bank St & Hudson St\",\"Broadway & W 51 St\",\"W 18 St & 6 Ave\",\"Centre St & Chambers St\",\"Murray St & West St\",\"Mercer St & Bleecker St S\",\"Greenwich St & Warren St\",\"W 43 St & 10 Ave\",\"Mercer St & Spring St\",\"W 20 St & 8 Ave\",\"W 15 St & 7 Ave\",\"E 4 St & 2 Ave\",\"W 37 St & 5 Ave\",\"Pershing Square North\",\"W 49 St & 8 Ave\",\"W 25 St & 6 Ave\",\"W 22 St & 10 Ave\",\"Rivington St & Chrystie St\",\"DeKalb Ave & Hudson Ave\",\"Lawrence St & Willoughby St\",\"South St & Gouverneur Ln\",\"St Marks Pl & 1 Ave\",\"E 2 St & Avenue C\",\"Howard St & Centre St\",\"11 Ave & W 59 St\",\"Old Fulton St\",\"E 11 St & 2 Ave\",\"W 21 St & 6 Ave\",\"Great Jones St\",\"E 19 St & 3 Ave\",\"Greenwich St & W Houston St\",\"W 38 St & 8 Ave\",\"E 51 St & Lexington Ave\",\"University Pl & E 14 St\",\"Hicks St & Montague St\",\"W 27 St & 7 Ave\",\"E 20 St & 2 Ave\",\"Pershing Square South\",\"E 15 St & Irving Pl\",\"Broadway & W 53 St\",\"Broadway & W 29 St\",\"W 45 St & 6 Ave (1)\",\"Metropolitan Ave & Bedford Ave\",\"W 20 St & 7 Ave\",\"Pearl St & Hanover Square\",\"Barclay St & Church St\",\"Broadway & W 41 St\",\"W 39 St & 9 Ave\",\"Washington Square E\",\"E 15 St & 3 Ave\",\"E 31 St & 3 Ave\",\"Sullivan St & Washington Sq\",\"St Marks Pl & 2 Ave\",\"W 24 St & 7 Ave\",\"E 27 St & 1 Ave\",\"Cadman Plaza West & Montague St\",\"W 59 St & 10 Ave\",\"Warren St & Church St\",\"E 43 St & Vanderbilt Ave\",\"W 13 St & 6 Ave\",\"Washington Pl & 6 Ave\",\"Centre St & Worth St\",\"E 32 St & Park Ave\",\"S 5 Pl & S 5 St\",\"E 14 St & Avenue B\",\"Allen St & Stanton St\",\"Greenwich Ave & Charles St\",\"E 20 St & FDR Drive\",\"W 16 St & The High Line\",\"6 Ave & Canal St\",\"E 2 St & Avenue B\",\"1 Ave & E 16 St\",\"Lexington Ave & E 24 St\",\"W 17 St & 8 Ave\",\"W 51 St & 6 Ave\",\"Front St & Washington St\",\"1 Ave & E 44 St\",\"W 22 St & 8 Ave\",\"E 23 St & 1 Ave\",\"Lexington Ave & E 29 St\",\"Atlantic Ave & Furman St\",\"FDR Drive & E 35 St\",\"W 52 St & 11 Ave\",\"W 52 St & 5 Ave\",\"Watts St & Greenwich St\",\"LaGuardia Pl & W 3 St\",\"Bayard St & Baxter St\",\"E 12 St & 3 Ave\",\"Washington Pl & Broadway\",\"E 16 St & 5 Ave\",\"E 10 St & Avenue A\",\"1 Ave & E 18 St\",\"Washington St & Gansevoort St\",\"Broadway & W 32 St\",\"Canal St & Rutgers St\",\"W 13 St & 7 Ave\",\"W 29 St & 9 Ave\",\"E 53 St & Madison Ave\",\"William St & Pine St\",\"Allen St & Rivington St\",\"Clinton St & Grand St\",\"E 53 St & Lexington Ave\",\"E 9 St & Avenue C\",\"Water - Whitehall Plaza\",\"W 47 St & 10 Ave\",\"Atlantic Ave & Fort Greene Pl\",\"John St & William St\",\"Vesey Pl & River Terrace\",\"6 Ave & Broome St\",\"11 Ave & W 41 St\",\"W 37 St & 10 Ave\",\"E 3 St & 1 Ave\",\"Forsyth St & Canal St\",\"8 Ave & W 52 St\",\"Fulton St & Broadway\",\"Reade St & Broadway\",\"E 13 St & Avenue A\",\"Perry St & Bleecker St\",\"W 56 St & 10 Ave\",\"Duane St & Greenwich St\",\"E 47 St & Park Ave\",\"Dean St & 4 Ave\",\"Hudson St & Reade St\",\"Pearl St & Anchorage Pl\",\"5 Ave & E 29 St\",\"E 51 St & 1 Ave\",\"Ashland Pl & Hanson Pl\",\"Suffolk St & Stanton St\",\"State St & Smith St\",\"Allen St & Hester St\",\"11 Ave & W 27 St\",\"1 Ave & E 30 St\",\"E 6 St & Avenue B\",\"Henry St & Grand St\",\"Jay St & Tech Pl\",\"W 26 St & 8 Ave\",\"Spruce St & Nassau St\",\"E 25 St & 2 Ave\",\"MacDougal St & Washington Sq\",\"6 Ave & W 33 St\",\"W 42 St & 8 Ave\",\"E 10 St & 5 Ave\",\"E 39 St & 3 Ave\",\"Maiden Ln & Pearl St\",\"Leonard St & Church St\",\"Broadway & W 38 St\",\"Cliff St & Fulton St\",\"Cumberland St & Lafayette Ave\",\"Lafayette St & Jersey St N\",\"E 30 St & Park Ave S\",\"E 33 St & 5 Ave\",\"South St & Whitehall St\",\"York St & Jay St\",\"W 52 St & 9 Ave\",\"E 33 St & 2 Ave\",\"Old Slip & Front St\",\"E 48 St & Madison Ave\",\"E 11 St & Broadway\",\"Lispenard St & Broadway\",\"W 11 St & 6 Ave\",\"Stanton St & Chrystie St\",\"MacDougal St & Prince St\",\"Cadman Plaza W & Pierrepont St\",\"E 56 St & 3 Ave\",\"Norfolk St & Broome St\",\"9 Ave & W 45 St\",\"10 Ave & W 28 St\",\"W 54 St & 9 Ave\",\"E 45 St & 3 Ave\",\"E 5 St & Avenue C\",\"S 3 St & Bedford Ave\",\"Little West St & 1 Pl\",\"Wythe Ave & Metropolitan Ave\",\"W 44 St & 5 Ave\",\"9 Ave & W 18 St\",\"Catherine St & Monroe St\",\"Clinton St & Joralemon St\",\"E 2 St & 2 Ave\",\"Forsyth St & Broome St\",\"W 46 St & 11 Ave\",\"Broadway & W 37 St\",\"E 60 St & York Ave\",\"Broadway & W 36 St\",\"Rivington St & Ridge St\",\"Liberty St & Broadway\",\"W 34 St & 11 Ave\",\"Division St & Bowery\",\"Clinton St & Tillary St\",\"Cherry St\",\"Bond St & Schermerhorn St\",\"Henry St & Atlantic Ave\",\"Clinton Ave & Myrtle Ave\",\"Broadway & Berry St\",\"8 Ave & W 33 St\",\"W 53 St & 10 Ave\",\"Fulton St & William St\",\"Lafayette Ave & Fort Greene Pl\",\"Front St & Maiden Ln\",\"South End Ave & Liberty St\",\"Clark St & Henry St\",\"E 55 St & Lexington Ave\",\"Grand St & Havemeyer St\",\"Fulton St & Washington Ave\",\"Pike St & E Broadway\",\"E 47 St & 1 Ave\",\"St James Pl & Oliver St\",\"W 31 St & 7 Ave\",\"E 52 St & 2 Ave\",\"Harrison St & Hudson St\",\"Cadman Plaza E & Tillary St\",\"E 20 St & Park Ave\",\"S 4 St & Wythe Ave\",\"Broadway & W 60 St\",\"W 13 St & 5 Ave\",\"E 25 St & 1 Ave\",\"E 47 St & 2 Ave\",\"Bialystoker Pl & Delancey St\",\"Johnson St & Gold St\",\"W 43 St & 6 Ave\",\"Cadman Plaza E & Red Cross Pl\",\"Fulton St & Grand Ave\",\"Market St & Cherry St\",\"Shevchenko Pl & E 7 St\",\"Fulton St & Rockwell Pl\",\"Broad St & Bridge St\",\"Columbia St & Rivington St\",\"Lefferts Pl & Franklin Ave\",\"Adelphi St & Myrtle Ave\",\"Lafayette Ave & Classon Ave\",\"Macon St & Nostrand Ave\",\"Grand Army Plaza & Central Park S\",\"E 6 St & Avenue D\",\"Grand St & Greene St\",\"DeKalb Ave & S Portland Ave\",\"Washington Ave & Park Ave\",\"NYCBS Depot - FAR\",\"Carlton Ave & Park Ave\",\"Columbia Heights & Cranberry St\",\"W 45 St & 8 Ave\",\"Stanton St & Mangin St\",\"St James Pl & Pearl St\",\"S Portland Ave & Hanson Pl\",\"Carlton Ave & Flushing Ave\",\"Willoughby Ave & Walworth St\",\"Front St & Gold St\",\"W 26 St & 10 Ave\",\"Emerson Pl & Myrtle Ave\",\"Kent Ave & S 11 St\",\"Willoughby Ave & Hall St\",\"Washington Park\",\"Duffield St & Willoughby St\",\"NYCBS Depot - DEL\",\"Clermont Ave & Lafayette Ave\",\"Laight St & Hudson St\",\"Madison St & Montgomery St\",\"Henry St & Poplar St\",\"Greenwich Ave & 8 Ave\",\"Lexington Ave & Classon Ave\",\"Pike St & Monroe St\",\"Nassau St & Navy St\",\"Fulton St & Clermont Ave\",\"E 56 St & Madison Ave\",\"Peck Slip & Front St\",\"Bedford Ave & S 9 St\",\"Madison St & Clinton St\",\"Monroe St & Bedford Ave\",\"Avenue D & E 8 St\",\"Railroad Ave & Kay Ave\",\"Lafayette Ave & St James Pl\",\"Pitt St & Stanton St\",\"Concord St & Bridge St\",\"Willoughby St & Fleet St\",\"Washington Ave & Greene Ave\",\"Hancock St & Bedford Ave\",\"Broadway & W 49 St\",\"Franklin Ave & Myrtle Ave\",\"3 Ave & Schermerhorn St\",\"Myrtle Ave & St Edwards St\",\"DeKalb Ave & Vanderbilt Ave\",\"Avenue D & E 3 St\",\"E 55 St & 2 Ave\",\"Gallatin Pl & Livingston St\",\"Clermont Ave & Park Ave\",\"Clinton Ave & Flushing Ave\",\"3969.TEMP (Bike The Branches - Central Branch)\",\"NYCBS Depot - SSP\",\"Sands St & Navy St\",\"NYCBS Test\",\"Avenue D & E 12 St\",\"Monroe St & Classon Ave\",\"Hanover Pl & Livingston St\",\"Park Ave & St Edwards St\",\"E 48 St & 3 Ave\",\"Elizabeth St & Hester St\",\"MLSWKiosk\"],\"xaxis\":\"x\",\"y\":[917,880,865,796,744,688,677,675,634,629,594,588,553,546,537,531,528,515,509,499,489,486,481,466,450,443,443,438,437,427,426,422,417,416,399,398,394,393,387,386,386,384,384,379,377,377,375,374,370,369,367,367,367,367,366,365,362,361,361,360,357,357,356,356,355,354,348,348,344,343,342,342,341,341,340,340,338,336,334,332,330,329,328,327,327,323,322,321,321,318,315,314,313,312,308,307,306,304,303,301,301,300,300,298,296,295,295,294,293,293,292,292,290,290,289,286,286,285,283,281,280,278,273,272,272,271,268,266,266,265,264,263,263,263,263,262,259,259,258,258,257,256,256,255,254,253,252,251,250,249,247,245,244,241,240,240,239,239,239,238,238,236,236,235,233,233,232,228,227,226,226,226,225,224,220,219,219,219,217,215,213,212,211,210,209,209,208,207,207,206,206,205,205,204,202,201,199,199,199,198,195,195,194,193,192,192,191,189,186,186,183,182,181,181,180,179,177,175,174,173,172,171,170,162,162,162,162,161,159,155,154,154,154,153,153,152,151,151,146,140,139,137,136,136,134,134,132,131,131,131,126,124,124,122,122,121,120,119,119,119,119,118,118,111,110,106,105,105,101,100,100,100,99,98,97,93,91,87,87,85,85,84,84,82,81,80,78,74,72,72,71,70,70,68,68,68,68,67,67,65,65,65,65,65,63,60,58,57,57,55,55,55,52,52,50,48,46,46,41,40,38,36,35,35,34,34,32,31,29,19,11,5,4,2],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"End Station Name\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Count\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('11792d7d-0e82-43d0-acc0-6a2aaa8b6c1b');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                            </script>        </div>\n",
       "</body>\n",
       "</html>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "px.bar(x=temp[\"end station name\"].value_counts().index,\n",
    "       y=temp[\"end station name\"].value_counts().values,\n",
    "       labels={'x':'End Station Name',\"y\":\"Count\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 542
    },
    "id": "5bVa7tO5o-LZ",
    "outputId": "c5e7bcbc-761d-4e1c-d35e-c7a9dbd2b067"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<html>\n",
       "<head><meta charset=\"utf-8\" /></head>\n",
       "<body>\n",
       "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
       "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"8d076d83-8be2-4749-bff8-ff90d0e4f627\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"8d076d83-8be2-4749-bff8-ff90d0e4f627\")) {                    Plotly.newPlot(                        \"8d076d83-8be2-4749-bff8-ff90d0e4f627\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Time=%{x}<br>Number of people using bike=%{y}<extra></extra>\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"textposition\":\"auto\",\"x\":[0,1,2,3,-23,4,5,6,7,8,-7,-14,9,10,-10,-9,-11,-12,-8,-6,-4,-5,-1,-2,-15,-13,-3,-16,-18,-17,-22,11,-20,-21,-19,13,12,16,14,15,19],\"xaxis\":\"x\",\"y\":[57168,23504,1092,476,299,285,151,107,79,54,54,46,45,43,41,41,41,40,39,38,38,37,35,35,35,33,32,25,25,22,22,22,18,17,16,10,8,7,5,4,2],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Time\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Number of people using bike\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Hour usage of Citi Bikes\"},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('8d076d83-8be2-4749-bff8-ff90d0e4f627');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                            </script>        </div>\n",
       "</body>\n",
       "</html>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "px.bar(x=temp[\"Hour\"].value_counts().index,\n",
    "       y=temp[\"Hour\"].value_counts().values,\n",
    "       title = \"Hour usage of Citi Bikes\",\n",
    "       labels={'x':'Time',\"y\":\"Number of people using bike\"})"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}